{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Microsoft (R) Visual C# Compiler",
        "version": "4.8.0.0",
        "fileVersion": "4.8.0-3.23524.11 (f43cd10b)",
        "semanticVersion": "4.8.0",
        "language": "en-GB"
      },
      "results": [
        {
          "ruleId": "CS8625",
          "level": "warning",
          "message": "Cannot convert null literal to non-nullable reference type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Controllers/BaseController.cs",
                "region": {
                  "startLine": 25,
                  "startColumn": 67,
                  "endLine": 25,
                  "endColumn": 71
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8625",
          "level": "warning",
          "message": "Cannot convert null literal to non-nullable reference type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Controllers/BaseController.cs",
                "region": {
                  "startLine": 45,
                  "startColumn": 24,
                  "endLine": 45,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8625",
          "level": "warning",
          "message": "Cannot convert null literal to non-nullable reference type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Controllers/CourseController.cs",
                "region": {
                  "startLine": 32,
                  "startColumn": 49,
                  "endLine": 32,
                  "endColumn": 53
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS1998",
          "level": "warning",
          "message": "This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Controllers/CourseController.cs",
                "region": {
                  "startLine": 21,
                  "startColumn": 42,
                  "endLine": 21,
                  "endColumn": 51
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS1998",
          "level": "warning",
          "message": "This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Controllers/CourseController.cs",
                "region": {
                  "startLine": 38,
                  "startColumn": 42,
                  "endLine": 38,
                  "endColumn": 58
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8603",
          "level": "warning",
          "message": "Possible null reference return.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Controllers/BulkQuestionController.cs",
                "region": {
                  "startLine": 84,
                  "startColumn": 20,
                  "endLine": 84,
                  "endColumn": 24
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8625",
          "level": "warning",
          "message": "Cannot convert null literal to non-nullable reference type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Controllers/EnrollmentController.cs",
                "region": {
                  "startLine": 40,
                  "startColumn": 49,
                  "endLine": 40,
                  "endColumn": 53
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8603",
          "level": "warning",
          "message": "Possible null reference return.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Controllers/BaseController.cs",
                "region": {
                  "startLine": 98,
                  "startColumn": 20,
                  "endLine": 98,
                  "endColumn": 24
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8604",
          "level": "warning",
          "message": "Possible null reference argument for parameter 'Email' in 'bool IForgetService.ForgetPassword(string Email)'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Controllers/ForgetPasswordController.cs",
                "region": {
                  "startLine": 28,
                  "startColumn": 56,
                  "endLine": 28,
                  "endColumn": 76
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS1998",
          "level": "warning",
          "message": "This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Controllers/ForgetPasswordController.cs",
                "region": {
                  "startLine": 24,
                  "startColumn": 41,
                  "endLine": 24,
                  "endColumn": 55
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS1998",
          "level": "warning",
          "message": "This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Controllers/CourseTopicController.cs",
                "region": {
                  "startLine": 36,
                  "startColumn": 42,
                  "endLine": 36,
                  "endColumn": 66
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS1998",
          "level": "warning",
          "message": "This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Controllers/CourseTopicController.cs",
                "region": {
                  "startLine": 43,
                  "startColumn": 42,
                  "endLine": 43,
                  "endColumn": 59
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Interceptors/ApiExceptionInterceptor.cs",
                "region": {
                  "startLine": 38,
                  "startColumn": 43,
                  "endLine": 38,
                  "endColumn": 76
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8600",
          "level": "warning",
          "message": "Converting null literal or possible null value to non-nullable type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Interceptors/ApiExceptionInterceptor.cs",
                "region": {
                  "startLine": 38,
                  "startColumn": 25,
                  "endLine": 38,
                  "endColumn": 86
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Interceptors/ApiExceptionInterceptor.cs",
                "region": {
                  "startLine": 40,
                  "startColumn": 42,
                  "endLine": 40,
                  "endColumn": 75
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8600",
          "level": "warning",
          "message": "Converting null literal or possible null value to non-nullable type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Interceptors/ApiExceptionInterceptor.cs",
                "region": {
                  "startLine": 40,
                  "startColumn": 24,
                  "endLine": 40,
                  "endColumn": 85
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Interceptors/ApiExceptionInterceptor.cs",
                "region": {
                  "startLine": 40,
                  "startColumn": 24,
                  "endLine": 40,
                  "endColumn": 85
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Interceptors/ApiExceptionInterceptor.cs",
                "region": {
                  "startLine": 53,
                  "startColumn": 48,
                  "endLine": 53,
                  "endColumn": 72
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Interceptors/ApiExceptionInterceptor.cs",
                "region": {
                  "startLine": 59,
                  "startColumn": 17,
                  "endLine": 59,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Interceptors/ApiExceptionInterceptor.cs",
                "region": {
                  "startLine": 59,
                  "startColumn": 17,
                  "endLine": 59,
                  "endColumn": 60
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS1998",
          "level": "warning",
          "message": "This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Controllers/CourseTopicController.cs",
                "region": {
                  "startLine": 49,
                  "startColumn": 42,
                  "endLine": 49,
                  "endColumn": 59
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8604",
          "level": "warning",
          "message": "Possible null reference argument for parameter 'Email' in 'Task<bool> IService.ForgetPassword(string Email)'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Controllers/RandomPasswordController.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 56,
                  "endLine": 23,
                  "endColumn": 76
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS1998",
          "level": "warning",
          "message": "This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Controllers/RandomPasswordController.cs",
                "region": {
                  "startLine": 19,
                  "startColumn": 41,
                  "endLine": 19,
                  "endColumn": 55
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8601",
          "level": "warning",
          "message": "Possible null reference assignment.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Controllers/QuizController.cs",
                "region": {
                  "startLine": 68,
                  "startColumn": 30,
                  "endLine": 68,
                  "endColumn": 48
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8604",
          "level": "warning",
          "message": "Possible null reference argument for parameter 'key' in 'bool ConcurrentDictionary<string, string>.ContainsKey(string key)'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Controllers/EmailController.cs",
                "region": {
                  "startLine": 79,
                  "startColumn": 41,
                  "endLine": 79,
                  "endColumn": 56
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8600",
          "level": "warning",
          "message": "Converting null literal or possible null value to non-nullable type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Controllers/EmailController.cs",
                "region": {
                  "startLine": 98,
                  "startColumn": 65,
                  "endLine": 98,
                  "endColumn": 76
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8600",
          "level": "warning",
          "message": "Converting null literal or possible null value to non-nullable type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Controllers/EmailController.cs",
                "region": {
                  "startLine": 116,
                  "startColumn": 61,
                  "endLine": 116,
                  "endColumn": 72
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS1998",
          "level": "warning",
          "message": "This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Controllers/RegistrationController.cs",
                "region": {
                  "startLine": 82,
                  "startColumn": 42,
                  "endLine": 82,
                  "endColumn": 63
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS1998",
          "level": "warning",
          "message": "This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Controllers/RegistrationController.cs",
                "region": {
                  "startLine": 92,
                  "startColumn": 42,
                  "endLine": 92,
                  "endColumn": 56
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8600",
          "level": "warning",
          "message": "Converting null literal or possible null value to non-nullable type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Controllers/RegistrationController.cs",
                "region": {
                  "startLine": 232,
                  "startColumn": 55,
                  "endLine": 232,
                  "endColumn": 66
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8600",
          "level": "warning",
          "message": "Converting null literal or possible null value to non-nullable type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Controllers/RegistrationController.cs",
                "region": {
                  "startLine": 248,
                  "startColumn": 51,
                  "endLine": 248,
                  "endColumn": 62
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS0618",
          "level": "warning",
          "message": "'FluentValidationMvcConfiguration.RegisterValidatorsFromAssembly(Assembly, Func<AssemblyScanner.AssemblyScanResult, bool>, ServiceLifetime, bool)' is obsolete: 'RegisterValidatorsFromAssembly is deprecated. Call services.AddValidatorsFromAssembly instead, which has the same effect. See https://github.com/FluentValidation/FluentValidation/issues/1963'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Program.cs",
                "region": {
                  "startLine": 146,
                  "startColumn": 9,
                  "endLine": 146,
                  "endColumn": 74
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 2
          }
        },
        {
          "ruleId": "CS0618",
          "level": "warning",
          "message": "'FluentValidationMvcExtensions.AddFluentValidation(IMvcBuilder, Action<FluentValidationMvcConfiguration>)' is obsolete: 'Calling AddFluentValidation() is deprecated. Call services.AddFluentValidationAutoValidation().AddFluentValidationClientsideAdapters() instead, which has the same effect. For details see https://github.com/FluentValidation/FluentValidation/issues/1965'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Program.cs",
                "region": {
                  "startLine": 142,
                  "startColumn": 1,
                  "endLine": 147,
                  "endColumn": 7
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 2
          }
        },
        {
          "ruleId": "CS1587",
          "level": "warning",
          "message": "XML comment is not placed on a valid language element",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Controllers/CategoryController.cs",
                "region": {
                  "startLine": 10,
                  "startColumn": 5,
                  "endLine": 10,
                  "endColumn": 6
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 2
          }
        },
        {
          "ruleId": "CS1587",
          "level": "warning",
          "message": "XML comment is not placed on a valid language element",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Controllers/DashboardController.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 5,
                  "endLine": 9,
                  "endColumn": 6
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 2
          }
        },
        {
          "ruleId": "CS1587",
          "level": "warning",
          "message": "XML comment is not placed on a valid language element",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Controllers/QuizQuestionController.cs",
                "region": {
                  "startLine": 10,
                  "startColumn": 5,
                  "endLine": 10,
                  "endColumn": 6
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 2
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Controllers/BaseController.cs",
                "region": {
                  "startLine": 103,
                  "startColumn": 1,
                  "endLine": 103,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Controllers/BulkQuestionController.cs",
                "region": {
                  "startLine": 90,
                  "startColumn": 1,
                  "endLine": 90,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Controllers/DashboardController.cs",
                "region": {
                  "startLine": 88,
                  "startColumn": 9,
                  "endLine": 88,
                  "endColumn": 12
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Controllers/EmailController.cs",
                "region": {
                  "startLine": 77,
                  "startColumn": 13,
                  "endLine": 77,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Controllers/EmailController.cs",
                "region": {
                  "startLine": 87,
                  "startColumn": 17,
                  "endLine": 87,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Controllers/EmailController.cs",
                "region": {
                  "startLine": 135,
                  "startColumn": 1,
                  "endLine": 135,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Controllers/FeedbackResponseController.cs",
                "region": {
                  "startLine": 124,
                  "startColumn": 1,
                  "endLine": 124,
                  "endColumn": 57
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Controllers/GetController.cs",
                "region": {
                  "startLine": 61,
                  "startColumn": 1,
                  "endLine": 61,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Controllers/LoginController.cs",
                "region": {
                  "startLine": 33,
                  "startColumn": 9,
                  "endLine": 33,
                  "endColumn": 12
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Controllers/QuizEngineController.cs",
                "region": {
                  "startLine": 148,
                  "startColumn": 1,
                  "endLine": 148,
                  "endColumn": 51
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Controllers/QuizFeedbackController.cs",
                "region": {
                  "startLine": 201,
                  "startColumn": 1,
                  "endLine": 201,
                  "endColumn": 62
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Controllers/QuizQuestionController.cs",
                "region": {
                  "startLine": 97,
                  "startColumn": 9,
                  "endLine": 97,
                  "endColumn": 12
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Controllers/QuizQuestionController.cs",
                "region": {
                  "startLine": 149,
                  "startColumn": 1,
                  "endLine": 149,
                  "endColumn": 4
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Controllers/RegistrationController.cs",
                "region": {
                  "startLine": 119,
                  "startColumn": 13,
                  "endLine": 119,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Controllers/RegistrationController.cs",
                "region": {
                  "startLine": 162,
                  "startColumn": 9,
                  "endLine": 162,
                  "endColumn": 12
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Controllers/RegistrationController.cs",
                "region": {
                  "startLine": 212,
                  "startColumn": 13,
                  "endLine": 212,
                  "endColumn": 68
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Controllers/RegistrationController.cs",
                "region": {
                  "startLine": 221,
                  "startColumn": 17,
                  "endLine": 221,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Controllers/RegistrationController.cs",
                "region": {
                  "startLine": 263,
                  "startColumn": 9,
                  "endLine": 263,
                  "endColumn": 12
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Program.cs",
                "region": {
                  "startLine": 138,
                  "startColumn": 1,
                  "endLine": 138,
                  "endColumn": 4
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2068",
          "level": "warning",
          "message": "\"password\" detected here, make sure this is not a hard-coded credential.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/appsettings.json",
                "region": {
                  "startLine": 28,
                  "startColumn": 24,
                  "endLine": 28,
                  "endColumn": 43
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4487",
          "level": "warning",
          "message": "Remove this unread private field '_quizFeedbackService' or refactor the code to use its value.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Controllers/GetController.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 47,
                  "endLine": 11,
                  "endColumn": 67
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1144",
          "level": "warning",
          "message": "Remove the unused private method 'UnixTimeStampToDateTime'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Controllers/RegistrationController.cs",
                "region": {
                  "startLine": 199,
                  "startColumn": 9,
                  "endLine": 204,
                  "endColumn": 10
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1859",
          "level": "note",
          "message": "Change return type of method 'ValidateImportQuizData' from 'Microsoft.AspNetCore.Mvc.IActionResult' to 'Microsoft.AspNetCore.Mvc.BadRequestObjectResult?' for improved performance",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Controllers/BulkQuestionController.cs",
                "region": {
                  "startLine": 70,
                  "startColumn": 31,
                  "endLine": 70,
                  "endColumn": 53
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogError(ILogger, Exception?, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Interceptors/GlobalExceptionHandlerMiddleware.cs",
                "region": {
                  "startLine": 29,
                  "startColumn": 34,
                  "endLine": 29,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2245",
          "level": "warning",
          "message": "Make sure that using this pseudorandom number generator is safe here.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Controllers/EmailController.cs",
                "region": {
                  "startLine": 32,
                  "startColumn": 27,
                  "endLine": 32,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1643",
          "level": "warning",
          "message": "Use a StringBuilder instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Controllers/EmailController.cs",
                "region": {
                  "startLine": 37,
                  "startColumn": 17,
                  "endLine": 37,
                  "endColumn": 47
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1860",
          "level": "note",
          "message": "Prefer comparing 'Count' to 0 rather than using 'Any()', both for clarity and for performance",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Controllers/BaseController.cs",
                "region": {
                  "startLine": 87,
                  "startColumn": 17,
                  "endLine": 87,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "DiagnosticPropertyKey": "Count"
            }
          }
        },
        {
          "ruleId": "S2696",
          "level": "warning",
          "message": "Make the enclosing instance method 'static' or remove this set on the 'static' field.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Controllers/EmailController.cs",
                "region": {
                  "startLine": 53,
                  "startColumn": 17,
                  "endLine": 53,
                  "endColumn": 31
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Api/Controllers/EmailController.cs",
                "region": {
                  "startLine": 16,
                  "startColumn": 33,
                  "endLine": 16,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1860",
          "level": "note",
          "message": "Prefer comparing 'Count' to 0 rather than using 'Any()', both for clarity and for performance",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Controllers/TopicFeedbackController.cs",
                "region": {
                  "startLine": 155,
                  "startColumn": 39,
                  "endLine": 155,
                  "endColumn": 54
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "DiagnosticPropertyKey": "Count"
            }
          }
        },
        {
          "ruleId": "CA1869",
          "level": "note",
          "message": "Avoid creating a new 'JsonSerializerOptions' instance for every serialization operation. Cache and reuse instances instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Controllers/ExcelToJsonController.cs",
                "region": {
                  "startLine": 42,
                  "startColumn": 31,
                  "endLine": 46,
                  "endColumn": 18
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1854",
          "level": "note",
          "message": "Prefer a 'TryGetValue' call over a Dictionary indexer access guarded by a 'ContainsKey' check to avoid double lookup",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Controllers/EmailController.cs",
                "region": {
                  "startLine": 79,
                  "startColumn": 17,
                  "endLine": 79,
                  "endColumn": 57
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Api/Controllers/EmailController.cs",
                "region": {
                  "startLine": 81,
                  "startColumn": 31,
                  "endLine": 81,
                  "endColumn": 59
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1481",
          "level": "warning",
          "message": "Remove the unused local variable 'num'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Controllers/EmailController.cs",
                "region": {
                  "startLine": 92,
                  "startColumn": 24,
                  "endLine": 92,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2068",
          "level": "warning",
          "message": "Please review this hard-coded password.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Controllers/RegistrationController.cs",
                "region": {
                  "startLine": 141,
                  "startColumn": 46,
                  "endLine": 141,
                  "endColumn": 87
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2245",
          "level": "warning",
          "message": "Make sure that using this pseudorandom number generator is safe here.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Controllers/RegistrationController.cs",
                "region": {
                  "startLine": 109,
                  "startColumn": 27,
                  "endLine": 109,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1643",
          "level": "warning",
          "message": "Use a StringBuilder instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Controllers/RegistrationController.cs",
                "region": {
                  "startLine": 114,
                  "startColumn": 17,
                  "endLine": 114,
                  "endColumn": 47
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1860",
          "level": "note",
          "message": "Prefer comparing 'Count' to 0 rather than using 'Any()', both for clarity and for performance",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Controllers/QuizQuestionController.cs",
                "region": {
                  "startLine": 120,
                  "startColumn": 36,
                  "endLine": 120,
                  "endColumn": 48
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "DiagnosticPropertyKey": "Count"
            }
          }
        },
        {
          "ruleId": "S4792",
          "level": "warning",
          "message": "Make sure that this logger's configuration is safe.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Program.cs",
                "region": {
                  "startLine": 132,
                  "startColumn": 14,
                  "endLine": 132,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2696",
          "level": "warning",
          "message": "Make the enclosing instance method 'static' or remove this set on the 'static' field.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Controllers/RegistrationController.cs",
                "region": {
                  "startLine": 147,
                  "startColumn": 25,
                  "endLine": 147,
                  "endColumn": 39
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Api/Controllers/RegistrationController.cs",
                "region": {
                  "startLine": 22,
                  "startColumn": 33,
                  "endLine": 22,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1854",
          "level": "note",
          "message": "Prefer a 'TryGetValue' call over a Dictionary indexer access guarded by a 'ContainsKey' check to avoid double lookup",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Controllers/RegistrationController.cs",
                "region": {
                  "startLine": 213,
                  "startColumn": 17,
                  "endLine": 213,
                  "endColumn": 47
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Api/Controllers/RegistrationController.cs",
                "region": {
                  "startLine": 215,
                  "startColumn": 31,
                  "endLine": 215,
                  "endColumn": 49
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1481",
          "level": "warning",
          "message": "Remove the unused local variable 'num'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Controllers/RegistrationController.cs",
                "region": {
                  "startLine": 226,
                  "startColumn": 24,
                  "endLine": 226,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S5122",
          "level": "warning",
          "message": "Make sure this permissive CORS policy is safe here.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Api/Program.cs",
                "region": {
                  "startLine": 27,
                  "startColumn": 13,
                  "endLine": 27,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        }
      ],
      "rules": {
        "CA1854": {
          "id": "CA1854",
          "shortDescription": "Prefer the 'IDictionary.TryGetValue(TKey, out TValue)' method",
          "fullDescription": "Prefer a 'TryGetValue' call over a Dictionary indexer access guarded by a 'ContainsKey' check. 'ContainsKey' and the indexer both would lookup the key under the hood, so using 'TryGetValue' removes the extra lookup.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1854",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA1859": {
          "id": "CA1859",
          "shortDescription": "Use concrete types when possible for improved performance",
          "fullDescription": "Using concrete types avoids virtual or interface call overhead and enables inlining.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1859",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA1860": {
          "id": "CA1860",
          "shortDescription": "Avoid using 'Enumerable.Any()' extension method",
          "fullDescription": "Prefer using 'IsEmpty', 'Count' or 'Length' properties whichever available, rather than calling 'Enumerable.Any()'. The intent is clearer and it is more performant than using 'Enumerable.Any()' extension method.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1860",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA1869": {
          "id": "CA1869",
          "shortDescription": "Cache and reuse 'JsonSerializerOptions' instances",
          "fullDescription": "Avoid creating a new 'JsonSerializerOptions' instance for every serialization operation. Cache and reuse instances instead. Single use 'JsonSerializerOptions' instances can substantially degrade the performance of your application.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1869",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA2254": {
          "id": "CA2254",
          "shortDescription": "Template should be a static expression",
          "fullDescription": "The logging message template should not vary between calls.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2254",
          "properties": {
            "category": "Usage",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CS0618": {
          "id": "CS0618",
          "shortDescription": "Type or member is obsolete",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS0618)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS1587": {
          "id": "CS1587",
          "shortDescription": "XML comment is not placed on a valid language element",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS1587)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS1998": {
          "id": "CS1998",
          "shortDescription": "Async method lacks 'await' operators and will run synchronously",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS1998)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8600": {
          "id": "CS8600",
          "shortDescription": "Converting null literal or possible null value to non-nullable type.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8600)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8601": {
          "id": "CS8601",
          "shortDescription": "Possible null reference assignment.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8601)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8602": {
          "id": "CS8602",
          "shortDescription": "Dereference of a possibly null reference.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8602)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8603": {
          "id": "CS8603",
          "shortDescription": "Possible null reference return.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8603)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8604": {
          "id": "CS8604",
          "shortDescription": "Possible null reference argument.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8604)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8625": {
          "id": "CS8625",
          "shortDescription": "Cannot convert null literal to non-nullable reference type.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8625)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "S1144": {
          "id": "S1144",
          "shortDescription": "Unused private types or members should be removed",
          "fullDescription": "private or internal types or private members that are never executed or referenced are dead code: unnecessary, inoperative code that should be removed. Cleaning out dead code decreases the size of the maintained codebase, making it easier to understand the program and preventing bugs from being introduced.",
          "defaultLevel": "note",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1144",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay",
              "Unnecessary"
            ]
          }
        },
        "S125": {
          "id": "S125",
          "shortDescription": "Sections of code should not be commented out",
          "fullDescription": "Programmers should not comment out code as it bloats programs and reduces readability.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-125",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1481": {
          "id": "S1481",
          "shortDescription": "Unused local variables should be removed",
          "fullDescription": "If a local variable is declared but not used, it is dead code and should be removed. Doing so will improve maintainability because developers will not wonder what the variable is used for.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1481",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1643": {
          "id": "S1643",
          "shortDescription": "Strings should not be concatenated using '+' in a loop",
          "fullDescription": "StringBuilder is more efficient than string concatenation, especially when the operator is repeated over and over as in loops.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1643",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2068": {
          "id": "S2068",
          "shortDescription": "Hard-coded credentials are security-sensitive",
          "fullDescription": "Because it is easy to extract strings from an application source code or binary, credentials should not be hard-coded. This is particularly true for applications that are distributed or that are open-source.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2068",
          "properties": {
            "category": "Blocker Security Hotspot",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2245": {
          "id": "S2245",
          "shortDescription": "Using pseudorandom number generators (PRNGs) is security-sensitive",
          "fullDescription": "Using pseudorandom number generators (PRNGs) is security-sensitive. For example, it has led in the past to the following vulnerabilities:",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2245",
          "properties": {
            "category": "Critical Security Hotspot",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2696": {
          "id": "S2696",
          "shortDescription": "Instance members should not write to \"static\" fields",
          "fullDescription": "Correctly updating a static field from a non-static method is tricky to get right and could easily lead to bugs if there are multiple class instances and/or multiple threads in play.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2696",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S4487": {
          "id": "S4487",
          "shortDescription": "Unread \"private\" fields should be removed",
          "fullDescription": "Private fields only used to store values without reading them later is a case of dead store. So changing the value of such field is useless and most probably indicates a serious error in the code.",
          "defaultLevel": "note",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-4487",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay",
              "Unnecessary"
            ]
          }
        },
        "S4792": {
          "id": "S4792",
          "shortDescription": "Configuring loggers is security-sensitive",
          "fullDescription": "Configuring loggers is security-sensitive. It has led in the past to the following vulnerabilities:",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-4792",
          "properties": {
            "category": "Critical Security Hotspot",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S5122": {
          "id": "S5122",
          "shortDescription": "Having a permissive Cross-Origin Resource Sharing policy is security-sensitive",
          "fullDescription": "Having a permissive Cross-Origin Resource Sharing policy is security-sensitive. It has led in the past to the following vulnerabilities:",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-5122",
          "properties": {
            "category": "Minor Security Hotspot",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        }
      }
    }
  ]
}