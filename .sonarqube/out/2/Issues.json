{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Microsoft (R) Visual C# Compiler",
        "version": "4.8.0.0",
        "fileVersion": "4.8.0-3.23524.11 (f43cd10b)",
        "semanticVersion": "4.8.0",
        "language": "en-GB"
      },
      "results": [
        {
          "ruleId": "CS1030",
          "level": "warning",
          "message": "#warning: 'To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see https://go.microsoft.com/fwlink/?LinkId=723263.'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 61,
                  "startColumn": 10,
                  "endLine": 61,
                  "endColumn": 380
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8613",
          "level": "warning",
          "message": "Nullability of reference types in return type of 'Task<LearnerAttemptViewModel?> QuizEngineRepository.CreateLearnerAttemptAsync(Guid learnerId, Guid quizId, DateTime startTime)' doesn't match implicitly implemented member 'Task<LearnerAttemptViewModel> IQuizEngineRepository.CreateLearnerAttemptAsync(Guid learnerId, Guid quizId, DateTime startTime)'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/QuizEngineRepository.cs",
                "region": {
                  "startLine": 42,
                  "startColumn": 53,
                  "endLine": 42,
                  "endColumn": 78
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Courses' must contain a non-null value when exiting constructor. Consider declaring the property as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 12,
                  "endLine": 11,
                  "endColumn": 24
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 34,
                  "endLine": 20,
                  "endColumn": 41
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'CourseCategories' must contain a non-null value when exiting constructor. Consider declaring the property as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 12,
                  "endLine": 11,
                  "endColumn": 24
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 22,
                  "startColumn": 42,
                  "endLine": 22,
                  "endColumn": 58
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'CourseLevels' must contain a non-null value when exiting constructor. Consider declaring the property as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 12,
                  "endLine": 11,
                  "endColumn": 24
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 24,
                  "startColumn": 39,
                  "endLine": 24,
                  "endColumn": 51
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Enrollments' must contain a non-null value when exiting constructor. Consider declaring the property as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 12,
                  "endLine": 11,
                  "endColumn": 24
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 38,
                  "endLine": 26,
                  "endColumn": 49
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Feedbackquestionsoptions' must contain a non-null value when exiting constructor. Consider declaring the property as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 12,
                  "endLine": 11,
                  "endColumn": 24
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 28,
                  "startColumn": 51,
                  "endLine": 28,
                  "endColumn": 75
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Feedbackresponses' must contain a non-null value when exiting constructor. Consider declaring the property as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 12,
                  "endLine": 11,
                  "endColumn": 24
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 30,
                  "startColumn": 44,
                  "endLine": 30,
                  "endColumn": 61
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Learners' must contain a non-null value when exiting constructor. Consider declaring the property as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 12,
                  "endLine": 11,
                  "endColumn": 24
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 32,
                  "startColumn": 35,
                  "endLine": 32,
                  "endColumn": 43
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'LearnerAnswers' must contain a non-null value when exiting constructor. Consider declaring the property as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 12,
                  "endLine": 11,
                  "endColumn": 24
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 34,
                  "startColumn": 41,
                  "endLine": 34,
                  "endColumn": 55
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'LearnerAttempts' must contain a non-null value when exiting constructor. Consider declaring the property as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 12,
                  "endLine": 11,
                  "endColumn": 24
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 36,
                  "startColumn": 42,
                  "endLine": 36,
                  "endColumn": 57
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'LearnerProfiles' must contain a non-null value when exiting constructor. Consider declaring the property as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 12,
                  "endLine": 11,
                  "endColumn": 24
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 38,
                  "startColumn": 42,
                  "endLine": 38,
                  "endColumn": 57
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'LearnerProgresses' must contain a non-null value when exiting constructor. Consider declaring the property as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 12,
                  "endLine": 11,
                  "endColumn": 24
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 40,
                  "startColumn": 43,
                  "endLine": 40,
                  "endColumn": 60
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Materials' must contain a non-null value when exiting constructor. Consider declaring the property as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 12,
                  "endLine": 11,
                  "endColumn": 24
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 42,
                  "startColumn": 36,
                  "endLine": 42,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'MaterialTypes' must contain a non-null value when exiting constructor. Consider declaring the property as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 12,
                  "endLine": 11,
                  "endColumn": 24
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 44,
                  "startColumn": 40,
                  "endLine": 44,
                  "endColumn": 53
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'PasswordHistories' must contain a non-null value when exiting constructor. Consider declaring the property as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 12,
                  "endLine": 11,
                  "endColumn": 24
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 46,
                  "startColumn": 43,
                  "endLine": 46,
                  "endColumn": 60
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'QuestionOptions' must contain a non-null value when exiting constructor. Consider declaring the property as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 12,
                  "endLine": 11,
                  "endColumn": 24
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 48,
                  "startColumn": 42,
                  "endLine": 48,
                  "endColumn": 57
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Quizzes' must contain a non-null value when exiting constructor. Consider declaring the property as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 12,
                  "endLine": 11,
                  "endColumn": 24
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 50,
                  "startColumn": 32,
                  "endLine": 50,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'QuizQuestions' must contain a non-null value when exiting constructor. Consider declaring the property as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 12,
                  "endLine": 11,
                  "endColumn": 24
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 52,
                  "startColumn": 40,
                  "endLine": 52,
                  "endColumn": 53
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Quizfeedbackquestions' must contain a non-null value when exiting constructor. Consider declaring the property as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 12,
                  "endLine": 11,
                  "endColumn": 24
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 54,
                  "startColumn": 48,
                  "endLine": 54,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Topics' must contain a non-null value when exiting constructor. Consider declaring the property as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 12,
                  "endLine": 11,
                  "endColumn": 24
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 56,
                  "startColumn": 33,
                  "endLine": 56,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Topicfeedbackquestions' must contain a non-null value when exiting constructor. Consider declaring the property as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 12,
                  "endLine": 11,
                  "endColumn": 24
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 58,
                  "startColumn": 49,
                  "endLine": 58,
                  "endColumn": 71
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Courses' must contain a non-null value when exiting constructor. Consider declaring the property as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 12,
                  "endLine": 15,
                  "endColumn": 24
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 34,
                  "endLine": 20,
                  "endColumn": 41
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'CourseCategories' must contain a non-null value when exiting constructor. Consider declaring the property as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 12,
                  "endLine": 15,
                  "endColumn": 24
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 22,
                  "startColumn": 42,
                  "endLine": 22,
                  "endColumn": 58
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'CourseLevels' must contain a non-null value when exiting constructor. Consider declaring the property as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 12,
                  "endLine": 15,
                  "endColumn": 24
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 24,
                  "startColumn": 39,
                  "endLine": 24,
                  "endColumn": 51
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Enrollments' must contain a non-null value when exiting constructor. Consider declaring the property as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 12,
                  "endLine": 15,
                  "endColumn": 24
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 38,
                  "endLine": 26,
                  "endColumn": 49
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Feedbackquestionsoptions' must contain a non-null value when exiting constructor. Consider declaring the property as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 12,
                  "endLine": 15,
                  "endColumn": 24
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 28,
                  "startColumn": 51,
                  "endLine": 28,
                  "endColumn": 75
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Feedbackresponses' must contain a non-null value when exiting constructor. Consider declaring the property as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 12,
                  "endLine": 15,
                  "endColumn": 24
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 30,
                  "startColumn": 44,
                  "endLine": 30,
                  "endColumn": 61
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Learners' must contain a non-null value when exiting constructor. Consider declaring the property as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 12,
                  "endLine": 15,
                  "endColumn": 24
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 32,
                  "startColumn": 35,
                  "endLine": 32,
                  "endColumn": 43
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'LearnerAnswers' must contain a non-null value when exiting constructor. Consider declaring the property as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 12,
                  "endLine": 15,
                  "endColumn": 24
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 34,
                  "startColumn": 41,
                  "endLine": 34,
                  "endColumn": 55
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'LearnerAttempts' must contain a non-null value when exiting constructor. Consider declaring the property as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 12,
                  "endLine": 15,
                  "endColumn": 24
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 36,
                  "startColumn": 42,
                  "endLine": 36,
                  "endColumn": 57
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'LearnerProfiles' must contain a non-null value when exiting constructor. Consider declaring the property as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 12,
                  "endLine": 15,
                  "endColumn": 24
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 38,
                  "startColumn": 42,
                  "endLine": 38,
                  "endColumn": 57
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'LearnerProgresses' must contain a non-null value when exiting constructor. Consider declaring the property as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 12,
                  "endLine": 15,
                  "endColumn": 24
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 40,
                  "startColumn": 43,
                  "endLine": 40,
                  "endColumn": 60
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Materials' must contain a non-null value when exiting constructor. Consider declaring the property as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 12,
                  "endLine": 15,
                  "endColumn": 24
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 42,
                  "startColumn": 36,
                  "endLine": 42,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'MaterialTypes' must contain a non-null value when exiting constructor. Consider declaring the property as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 12,
                  "endLine": 15,
                  "endColumn": 24
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 44,
                  "startColumn": 40,
                  "endLine": 44,
                  "endColumn": 53
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'PasswordHistories' must contain a non-null value when exiting constructor. Consider declaring the property as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 12,
                  "endLine": 15,
                  "endColumn": 24
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 46,
                  "startColumn": 43,
                  "endLine": 46,
                  "endColumn": 60
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'QuestionOptions' must contain a non-null value when exiting constructor. Consider declaring the property as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 12,
                  "endLine": 15,
                  "endColumn": 24
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 48,
                  "startColumn": 42,
                  "endLine": 48,
                  "endColumn": 57
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Quizzes' must contain a non-null value when exiting constructor. Consider declaring the property as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 12,
                  "endLine": 15,
                  "endColumn": 24
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 50,
                  "startColumn": 32,
                  "endLine": 50,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'QuizQuestions' must contain a non-null value when exiting constructor. Consider declaring the property as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 12,
                  "endLine": 15,
                  "endColumn": 24
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 52,
                  "startColumn": 40,
                  "endLine": 52,
                  "endColumn": 53
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Quizfeedbackquestions' must contain a non-null value when exiting constructor. Consider declaring the property as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 12,
                  "endLine": 15,
                  "endColumn": 24
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 54,
                  "startColumn": 48,
                  "endLine": 54,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Topics' must contain a non-null value when exiting constructor. Consider declaring the property as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 12,
                  "endLine": 15,
                  "endColumn": 24
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 56,
                  "startColumn": 33,
                  "endLine": 56,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Topicfeedbackquestions' must contain a non-null value when exiting constructor. Consider declaring the property as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 12,
                  "endLine": 15,
                  "endColumn": 24
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 58,
                  "startColumn": 49,
                  "endLine": 58,
                  "endColumn": 71
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8603",
          "level": "warning",
          "message": "Possible null reference return.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/CourseRepository.cs",
                "region": {
                  "startLine": 28,
                  "startColumn": 20,
                  "endLine": 28,
                  "endColumn": 56
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS1998",
          "level": "warning",
          "message": "This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/CourseLevelRepository.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 46,
                  "endLine": 26,
                  "endColumn": 63
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8603",
          "level": "warning",
          "message": "Possible null reference return.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/CourseLevelRepository.cs",
                "region": {
                  "startLine": 32,
                  "startColumn": 20,
                  "endLine": 32,
                  "endColumn": 66
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8603",
          "level": "warning",
          "message": "Possible null reference return.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/CategoryRepository.cs",
                "region": {
                  "startLine": 34,
                  "startColumn": 20,
                  "endLine": 34,
                  "endColumn": 67
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8603",
          "level": "warning",
          "message": "Possible null reference return.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/FeedbackResponseRepository.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 20,
                  "endLine": 20,
                  "endColumn": 122
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8603",
          "level": "warning",
          "message": "Possible null reference return.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/ForgetRepository.cs",
                "region": {
                  "startLine": 27,
                  "startColumn": 20,
                  "endLine": 27,
                  "endColumn": 89
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8603",
          "level": "warning",
          "message": "Possible null reference return.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/FeedbackResponseRepository.cs",
                "region": {
                  "startLine": 25,
                  "startColumn": 20,
                  "endLine": 25,
                  "endColumn": 125
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/CourseRepository.cs",
                "region": {
                  "startLine": 56,
                  "startColumn": 53,
                  "endLine": 56,
                  "endColumn": 81
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8603",
          "level": "warning",
          "message": "Possible null reference return.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/FeedbackResponseRepository.cs",
                "region": {
                  "startLine": 30,
                  "startColumn": 20,
                  "endLine": 30,
                  "endColumn": 83
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8603",
          "level": "warning",
          "message": "Possible null reference return.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/MaterialTypeRepository.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 20,
                  "endLine": 20,
                  "endColumn": 68
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS1998",
          "level": "warning",
          "message": "This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/LearnerRepository.cs",
                "region": {
                  "startLine": 45,
                  "startColumn": 33,
                  "endLine": 45,
                  "endColumn": 50
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8603",
          "level": "warning",
          "message": "Possible null reference return.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/FeedbackResponseRepository.cs",
                "region": {
                  "startLine": 35,
                  "startColumn": 20,
                  "endLine": 35,
                  "endColumn": 146
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS1998",
          "level": "warning",
          "message": "This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/LoginRepository.cs",
                "region": {
                  "startLine": 36,
                  "startColumn": 33,
                  "endLine": 36,
                  "endColumn": 47
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8603",
          "level": "warning",
          "message": "Possible null reference return.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/LearnerRepository.cs",
                "region": {
                  "startLine": 53,
                  "startColumn": 20,
                  "endLine": 53,
                  "endColumn": 92
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8603",
          "level": "warning",
          "message": "Possible null reference return.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/PasswordHistoryRepository.cs",
                "region": {
                  "startLine": 25,
                  "startColumn": 20,
                  "endLine": 25,
                  "endColumn": 108
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS1998",
          "level": "warning",
          "message": "This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/LearnerRepository.cs",
                "region": {
                  "startLine": 56,
                  "startColumn": 42,
                  "endLine": 56,
                  "endColumn": 55
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8603",
          "level": "warning",
          "message": "Possible null reference return.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/LearnerRepository.cs",
                "region": {
                  "startLine": 65,
                  "startColumn": 20,
                  "endLine": 65,
                  "endColumn": 58
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8603",
          "level": "warning",
          "message": "Possible null reference return.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/FeedbackResponseRepository.cs",
                "region": {
                  "startLine": 40,
                  "startColumn": 20,
                  "endLine": 40,
                  "endColumn": 148
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8603",
          "level": "warning",
          "message": "Possible null reference return.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/LoginRepository.cs",
                "region": {
                  "startLine": 46,
                  "startColumn": 20,
                  "endLine": 46,
                  "endColumn": 100
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8603",
          "level": "warning",
          "message": "Possible null reference return.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/MaterialRepository.cs",
                "region": {
                  "startLine": 32,
                  "startColumn": 20,
                  "endLine": 32,
                  "endColumn": 139
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS1998",
          "level": "warning",
          "message": "This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/ProfileRepository.cs",
                "region": {
                  "startLine": 25,
                  "startColumn": 49,
                  "endLine": 25,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8603",
          "level": "warning",
          "message": "Possible null reference return.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/ProfileRepository.cs",
                "region": {
                  "startLine": 41,
                  "startColumn": 20,
                  "endLine": 41,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8603",
          "level": "warning",
          "message": "Possible null reference return.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/QuizRepository.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 20,
                  "endLine": 23,
                  "endColumn": 54
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8600",
          "level": "warning",
          "message": "Converting null literal or possible null value to non-nullable type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/QuizFeedbackRepository.cs",
                "region": {
                  "startLine": 34,
                  "startColumn": 31,
                  "endLine": 34,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8604",
          "level": "warning",
          "message": "Possible null reference argument for parameter 'options' in 'bool QuizFeedbackRepository.ValidateOptionsByFeedbackQuestionType(string questionType, List<QuizFeedbackQuestionsOptionViewModel> options)'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/QuizFeedbackRepository.cs",
                "region": {
                  "startLine": 37,
                  "startColumn": 98,
                  "endLine": 37,
                  "endColumn": 105
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS1998",
          "level": "warning",
          "message": "This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/Repository.cs",
                "region": {
                  "startLine": 29,
                  "startColumn": 33,
                  "endLine": 29,
                  "endColumn": 47
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8603",
          "level": "warning",
          "message": "Possible null reference return.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/QuizRepository.cs",
                "region": {
                  "startLine": 45,
                  "startColumn": 20,
                  "endLine": 45,
                  "endColumn": 82
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8603",
          "level": "warning",
          "message": "Possible null reference return.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/QuizRepository.cs",
                "region": {
                  "startLine": 50,
                  "startColumn": 20,
                  "endLine": 50,
                  "endColumn": 83
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8603",
          "level": "warning",
          "message": "Possible null reference return.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/UpdatePasswordRepository.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 20,
                  "endLine": 23,
                  "endColumn": 121
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS1998",
          "level": "warning",
          "message": "This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/UpdatePasswordRepository.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 36,
                  "endLine": 20,
                  "endColumn": 61
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS0168",
          "level": "warning",
          "message": "The variable 'ex' is declared but never used",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/QuizQuestionRepository.cs",
                "region": {
                  "startLine": 79,
                  "startColumn": 38,
                  "endLine": 79,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 3
          }
        },
        {
          "ruleId": "CS8603",
          "level": "warning",
          "message": "Possible null reference return.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/Repository.cs",
                "region": {
                  "startLine": 39,
                  "startColumn": 20,
                  "endLine": 39,
                  "endColumn": 100
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8603",
          "level": "warning",
          "message": "Possible null reference return.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/Repository.cs",
                "region": {
                  "startLine": 64,
                  "startColumn": 20,
                  "endLine": 64,
                  "endColumn": 132
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8619",
          "level": "warning",
          "message": "Nullability of reference types in value of type 'List<string?>' doesn't match target type 'List<string>'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/DashboardRepository.cs",
                "region": {
                  "startLine": 162,
                  "startColumn": 20,
                  "endLine": 162,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8603",
          "level": "warning",
          "message": "Possible null reference return.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/CourseTopicRepository.cs",
                "region": {
                  "startLine": 65,
                  "startColumn": 20,
                  "endLine": 65,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8603",
          "level": "warning",
          "message": "Possible null reference return.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/TopicFeedbackRepository.cs",
                "region": {
                  "startLine": 102,
                  "startColumn": 24,
                  "endLine": 102,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8603",
          "level": "warning",
          "message": "Possible null reference return.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/QuizFeedbackRepository.cs",
                "region": {
                  "startLine": 198,
                  "startColumn": 24,
                  "endLine": 198,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8603",
          "level": "warning",
          "message": "Possible null reference return.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/TopicFeedbackRepository.cs",
                "region": {
                  "startLine": 156,
                  "startColumn": 20,
                  "endLine": 156,
                  "endColumn": 127
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8603",
          "level": "warning",
          "message": "Possible null reference return.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/QuizEngineRepository.cs",
                "region": {
                  "startLine": 219,
                  "startColumn": 20,
                  "endLine": 222,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/EnrollmentRepository.cs",
                "region": {
                  "startLine": 53,
                  "startColumn": 30,
                  "endLine": 53,
                  "endColumn": 58
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8603",
          "level": "warning",
          "message": "Possible null reference return.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/QuizQuestionRepository.cs",
                "region": {
                  "startLine": 302,
                  "startColumn": 28,
                  "endLine": 302,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8603",
          "level": "warning",
          "message": "Possible null reference return.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/QuizEngineRepository.cs",
                "region": {
                  "startLine": 348,
                  "startColumn": 24,
                  "endLine": 348,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8603",
          "level": "warning",
          "message": "Possible null reference return.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/QuizEngineRepository.cs",
                "region": {
                  "startLine": 353,
                  "startColumn": 24,
                  "endLine": 353,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8603",
          "level": "warning",
          "message": "Possible null reference return.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/QuizEngineRepository.cs",
                "region": {
                  "startLine": 396,
                  "startColumn": 20,
                  "endLine": 409,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4487",
          "level": "warning",
          "message": "Remove this unread private field '_environment' or refactor the code to use its value.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/CourseRepository.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 46,
                  "endLine": 18,
                  "endColumn": 58
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/IRepository/IFeedbackResponseRepository.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 9,
                  "endLine": 15,
                  "endColumn": 60
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/IRepository/IFeedbackResponseRepository.cs",
                "region": {
                  "startLine": 34,
                  "startColumn": 1,
                  "endLine": 34,
                  "endColumn": 57
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/IRepository/IForgetRepository.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 9,
                  "endLine": 7,
                  "endColumn": 56
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/IRepository/IForgetRepository.cs",
                "region": {
                  "startLine": 12,
                  "startColumn": 9,
                  "endLine": 12,
                  "endColumn": 89
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/IRepository/IForgetRepository.cs",
                "region": {
                  "startLine": 19,
                  "startColumn": 9,
                  "endLine": 19,
                  "endColumn": 55
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/IRepository/ILearnerRepository.cs",
                "region": {
                  "startLine": 19,
                  "startColumn": 9,
                  "endLine": 19,
                  "endColumn": 50
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/IRepository/ILoginRepository.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 9,
                  "endLine": 26,
                  "endColumn": 56
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/IRepository/IProfileRepository.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/IRepository/IQuizQuestionRepository.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 8,
                  "endLine": 9,
                  "endColumn": 106
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/IRepository/IQuizQuestionRepository.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 9,
                  "endLine": 17,
                  "endColumn": 74
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/IRepository/IQuizQuestionRepository.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 6,
                  "endLine": 20,
                  "endColumn": 78
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/IRepository/IQuizQuestionRepository.cs",
                "region": {
                  "startLine": 60,
                  "startColumn": 1,
                  "endLine": 60,
                  "endColumn": 24
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/IRepository/IQuizRepository.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 1,
                  "endLine": 18,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/IRepository/IUpdatePasswordRepository.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 9,
                  "endLine": 9,
                  "endColumn": 63
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4487",
          "level": "warning",
          "message": "Remove this unread private field '_environment' or refactor the code to use its value.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/LearnerRepository.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 46,
                  "endLine": 20,
                  "endColumn": 58
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4487",
          "level": "warning",
          "message": "Remove this unread private field '_environment' or refactor the code to use its value.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/EnrollmentRepository.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 46,
                  "endLine": 18,
                  "endColumn": 58
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/DashboardRepository.cs",
                "region": {
                  "startLine": 56,
                  "startColumn": 13,
                  "endLine": 56,
                  "endColumn": 49
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/EnrollmentRepository.cs",
                "region": {
                  "startLine": 83,
                  "startColumn": 44,
                  "endLine": 83,
                  "endColumn": 47
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/FeedbackResponseRepository.cs",
                "region": {
                  "startLine": 56,
                  "startColumn": 9,
                  "endLine": 56,
                  "endColumn": 12
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/FeedbackResponseRepository.cs",
                "region": {
                  "startLine": 106,
                  "startColumn": 1,
                  "endLine": 106,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/ForgetRepository.cs",
                "region": {
                  "startLine": 22,
                  "startColumn": 9,
                  "endLine": 22,
                  "endColumn": 12
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/ForgetRepository.cs",
                "region": {
                  "startLine": 41,
                  "startColumn": 9,
                  "endLine": 41,
                  "endColumn": 12
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/LearnerRepository.cs",
                "region": {
                  "startLine": 39,
                  "startColumn": 9,
                  "endLine": 39,
                  "endColumn": 12
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/LoginRepository.cs",
                "region": {
                  "startLine": 60,
                  "startColumn": 9,
                  "endLine": 60,
                  "endColumn": 12
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/QuizEngineRepository.cs",
                "region": {
                  "startLine": 473,
                  "startColumn": 9,
                  "endLine": 473,
                  "endColumn": 13
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4144",
          "level": "warning",
          "message": "Update this method so that its implementation is not identical to 'UpdateAllLearnerProfile'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/ProfileRepository.cs",
                "region": {
                  "startLine": 47,
                  "startColumn": 27,
                  "endLine": 47,
                  "endColumn": 40
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Data/Repository/ProfileRepository.cs",
                "region": {
                  "startLine": 29,
                  "startColumn": 27,
                  "endLine": 29,
                  "endColumn": 50
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/QuizFeedbackRepository.cs",
                "region": {
                  "startLine": 379,
                  "startColumn": 1,
                  "endLine": 379,
                  "endColumn": 4
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/QuizQuestionRepository.cs",
                "region": {
                  "startLine": 492,
                  "startColumn": 1,
                  "endLine": 492,
                  "endColumn": 4
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/QuizRepository.cs",
                "region": {
                  "startLine": 57,
                  "startColumn": 1,
                  "endLine": 57,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3251",
          "level": "warning",
          "message": "Supply an implementation for this partial method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 769,
                  "startColumn": 5,
                  "endLine": 769,
                  "endColumn": 12
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'LXPDbContext' to match pascal case naming rules, consider using 'LxpDbContext'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 22,
                  "endLine": 9,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'questions' to 'quizQuestions' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/BulkQuestionRepository.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 84,
                  "endLine": 18,
                  "endColumn": 93
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'LearnerId' to 'learnerId' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/EnrollmentRepository.cs",
                "region": {
                  "startLine": 36,
                  "startColumn": 58,
                  "endLine": 36,
                  "endColumn": 67
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'CourseId' to 'courseId' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/EnrollmentRepository.cs",
                "region": {
                  "startLine": 36,
                  "startColumn": 74,
                  "endLine": 36,
                  "endColumn": 82
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'learner' to 'loginmodel' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/LoginRepository.cs",
                "region": {
                  "startLine": 25,
                  "startColumn": 48,
                  "endLine": 25,
                  "endColumn": 55
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2068",
          "level": "warning",
          "message": "\"pwd\" detected here, make sure this is not a hard-coded credential.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 62,
                  "startColumn": 36,
                  "endLine": 62,
                  "endColumn": 95
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.Exception' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/BulkQuestionRepository.cs",
                "region": {
                  "startLine": 39,
                  "startColumn": 23,
                  "endLine": 39,
                  "endColumn": 95
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.Exception' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/QuizQuestionJsonRepository.cs",
                "region": {
                  "startLine": 38,
                  "startColumn": 23,
                  "endLine": 38,
                  "endColumn": 95
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1125",
          "level": "warning",
          "message": "Remove the unnecessary Boolean literal(s).",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/MaterialRepository.cs",
                "region": {
                  "startLine": 38,
                  "startColumn": 152,
                  "endLine": 38,
                  "endColumn": 158
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1862",
          "level": "note",
          "message": "Prefer using 'string.Equals(string, StringComparison)' to perform a case-insensitive comparison, but keep in mind that this might cause subtle changes in behavior, so make sure to conduct thorough testing after applying the suggestion, or if culturally sensitive comparison is not required, consider using 'StringComparison.OrdinalIgnoreCase'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/FeedbackResponseRepository.cs",
                "region": {
                  "startLine": 63,
                  "startColumn": 80,
                  "endLine": 63,
                  "endColumn": 126
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "LeftOffendingMethod": "ToLower",
              "RightOffendingMethod": "ToLower"
            }
          }
        },
        {
          "ruleId": "CA1862",
          "level": "note",
          "message": "Prefer using 'string.Equals(string, StringComparison)' to perform a case-insensitive comparison, but keep in mind that this might cause subtle changes in behavior, so make sure to conduct thorough testing after applying the suggestion, or if culturally sensitive comparison is not required, consider using 'StringComparison.OrdinalIgnoreCase'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/FeedbackResponseRepository.cs",
                "region": {
                  "startLine": 65,
                  "startColumn": 81,
                  "endLine": 65,
                  "endColumn": 127
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "LeftOffendingMethod": "ToLower",
              "RightOffendingMethod": "ToLower"
            }
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'learner' to 'loginmodel' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/Repository.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 48,
                  "endLine": 18,
                  "endColumn": 55
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3928",
          "level": "warning",
          "message": "The parameter name 'Question' is not declared in the argument list.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/QuizQuestionRepository.cs",
                "region": {
                  "startLine": 32,
                  "startColumn": 27,
                  "endLine": 32,
                  "endColumn": 119
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3928",
          "level": "warning",
          "message": "The parameter name 'QuestionType' is not declared in the argument list.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/QuizQuestionRepository.cs",
                "region": {
                  "startLine": 35,
                  "startColumn": 27,
                  "endLine": 35,
                  "endColumn": 127
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3928",
          "level": "warning",
          "message": "The parameter name 'QuestionType' is not declared in the argument list.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/QuizQuestionRepository.cs",
                "region": {
                  "startLine": 40,
                  "startColumn": 27,
                  "endLine": 40,
                  "endColumn": 112
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/QuizFeedbackRepository.cs",
                "region": {
                  "startLine": 60,
                  "startColumn": 21,
                  "endLine": 60,
                  "endColumn": 23
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Data/Repository/QuizFeedbackRepository.cs",
                "region": {
                  "startLine": 58,
                  "startColumn": 17,
                  "endLine": 58,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4457",
          "level": "warning",
          "message": "Split this method into two, one handling parameters check and the other handling the asynchronous code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/QuizQuestionRepository.cs",
                "region": {
                  "startLine": 27,
                  "startColumn": 33,
                  "endLine": 27,
                  "endColumn": 49
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Data/Repository/QuizQuestionRepository.cs",
                "region": {
                  "startLine": 32,
                  "startColumn": 27,
                  "endLine": 32,
                  "endColumn": 119
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Data/Repository/QuizQuestionRepository.cs",
                "region": {
                  "startLine": 35,
                  "startColumn": 27,
                  "endLine": 35,
                  "endColumn": 127
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Data/Repository/QuizQuestionRepository.cs",
                "region": {
                  "startLine": 40,
                  "startColumn": 27,
                  "endLine": 40,
                  "endColumn": 112
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Data/Repository/QuizQuestionRepository.cs",
                "region": {
                  "startLine": 43,
                  "startColumn": 27,
                  "endLine": 43,
                  "endColumn": 113
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Data/Repository/QuizQuestionRepository.cs",
                "region": {
                  "startLine": 46,
                  "startColumn": 27,
                  "endLine": 46,
                  "endColumn": 113
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'learnerid' to 'learnerId' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/LearnerRepository.cs",
                "region": {
                  "startLine": 92,
                  "startColumn": 60,
                  "endLine": 92,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1862",
          "level": "note",
          "message": "Prefer using 'string.Equals(string, StringComparison)' to perform a case-insensitive comparison, but keep in mind that this might cause subtle changes in behavior, so make sure to conduct thorough testing after applying the suggestion, or if culturally sensitive comparison is not required, consider using 'StringComparison.OrdinalIgnoreCase'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/QuizFeedbackRepository.cs",
                "region": {
                  "startLine": 32,
                  "startColumn": 21,
                  "endLine": 32,
                  "endColumn": 98
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "LeftOffendingMethod": null,
              "RightOffendingMethod": "ToUpper"
            }
          }
        },
        {
          "ruleId": "CA1862",
          "level": "note",
          "message": "Prefer using 'string.Equals(string, StringComparison)' to perform a case-insensitive comparison, but keep in mind that this might cause subtle changes in behavior, so make sure to conduct thorough testing after applying the suggestion, or if culturally sensitive comparison is not required, consider using 'StringComparison.OrdinalIgnoreCase'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/QuizFeedbackRepository.cs",
                "region": {
                  "startLine": 58,
                  "startColumn": 21,
                  "endLine": 58,
                  "endColumn": 98
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "LeftOffendingMethod": null,
              "RightOffendingMethod": "ToUpper"
            }
          }
        },
        {
          "ruleId": "CA2208",
          "level": "note",
          "message": "Method AddQuestionAsync passes 'Question' as the paramName argument to a ArgumentException constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/QuizQuestionRepository.cs",
                "region": {
                  "startLine": 32,
                  "startColumn": 27,
                  "endLine": 32,
                  "endColumn": 119
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2208",
          "level": "note",
          "message": "Method AddQuestionAsync passes 'QuestionType' as the paramName argument to a ArgumentException constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/QuizQuestionRepository.cs",
                "region": {
                  "startLine": 35,
                  "startColumn": 27,
                  "endLine": 35,
                  "endColumn": 127
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2208",
          "level": "note",
          "message": "Method AddQuestionAsync passes 'QuestionType' as the paramName argument to a ArgumentException constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/QuizQuestionRepository.cs",
                "region": {
                  "startLine": 40,
                  "startColumn": 27,
                  "endLine": 40,
                  "endColumn": 112
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2971",
          "level": "warning",
          "message": "Drop this useless call to 'ToList' or replace it by 'AsEnumerable' if you are using LINQ to Entities.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/DashboardRepository.cs",
                "region": {
                  "startLine": 123,
                  "startColumn": 21,
                  "endLine": 123,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'learnerid' to 'learnerId' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/LearnerRepository.cs",
                "region": {
                  "startLine": 119,
                  "startColumn": 64,
                  "endLine": 119,
                  "endColumn": 73
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'quizFeedbackQuestionId' to 'QuizFeedbackQuestionId' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/QuizFeedbackRepository.cs",
                "region": {
                  "startLine": 144,
                  "startColumn": 117,
                  "endLine": 144,
                  "endColumn": 139
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1862",
          "level": "note",
          "message": "Prefer using 'string.Equals(string, StringComparison)' to perform a case-insensitive comparison, but keep in mind that this might cause subtle changes in behavior, so make sure to conduct thorough testing after applying the suggestion, or if culturally sensitive comparison is not required, consider using 'StringComparison.OrdinalIgnoreCase'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/QuizQuestionRepository.cs",
                "region": {
                  "startLine": 109,
                  "startColumn": 21,
                  "endLine": 109,
                  "endColumn": 94
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "LeftOffendingMethod": "ToUpper",
              "RightOffendingMethod": null
            }
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'quizFeedbackQuestionId' to 'QuizFeedbackQuestionId' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/QuizFeedbackRepository.cs",
                "region": {
                  "startLine": 159,
                  "startColumn": 95,
                  "endLine": 159,
                  "endColumn": 117
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'quizFeedbackQuestionId' to 'QuizFeedbackQuestionId' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/QuizFeedbackRepository.cs",
                "region": {
                  "startLine": 175,
                  "startColumn": 77,
                  "endLine": 175,
                  "endColumn": 99
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 17 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/QuizFeedbackRepository.cs",
                "region": {
                  "startLine": 225,
                  "startColumn": 21,
                  "endLine": 225,
                  "endColumn": 43
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Data/Repository/QuizFeedbackRepository.cs",
                "region": {
                  "startLine": 230,
                  "startColumn": 17,
                  "endLine": 230,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Data/Repository/QuizFeedbackRepository.cs",
                "region": {
                  "startLine": 233,
                  "startColumn": 21,
                  "endLine": 233,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Data/Repository/QuizFeedbackRepository.cs",
                "region": {
                  "startLine": 245,
                  "startColumn": 21,
                  "endLine": 245,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Data/Repository/QuizFeedbackRepository.cs",
                "region": {
                  "startLine": 247,
                  "startColumn": 25,
                  "endLine": 247,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Data/Repository/QuizFeedbackRepository.cs",
                "region": {
                  "startLine": 256,
                  "startColumn": 25,
                  "endLine": 256,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Data/Repository/QuizFeedbackRepository.cs",
                "region": {
                  "startLine": 256,
                  "startColumn": 45,
                  "endLine": 256,
                  "endColumn": 47
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Data/Repository/QuizFeedbackRepository.cs",
                "region": {
                  "startLine": 258,
                  "startColumn": 29,
                  "endLine": 258,
                  "endColumn": 36
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Data/Repository/QuizFeedbackRepository.cs",
                "region": {
                  "startLine": 277,
                  "startColumn": 13,
                  "endLine": 277,
                  "endColumn": 18
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "2": "+2 (incl 1 for nesting)",
              "3": "+3 (incl 2 for nesting)",
              "4": "+3 (incl 2 for nesting)",
              "5": "+1",
              "6": "+4 (incl 3 for nesting)",
              "7": "+1"
            }
          }
        },
        {
          "ruleId": "CA1862",
          "level": "note",
          "message": "Prefer using 'string.Equals(string, StringComparison)' to perform a case-insensitive comparison, but keep in mind that this might cause subtle changes in behavior, so make sure to conduct thorough testing after applying the suggestion, or if culturally sensitive comparison is not required, consider using 'StringComparison.OrdinalIgnoreCase'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/QuizFeedbackRepository.cs",
                "region": {
                  "startLine": 217,
                  "startColumn": 17,
                  "endLine": 217,
                  "endColumn": 84
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "LeftOffendingMethod": null,
              "RightOffendingMethod": "ToUpper"
            }
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'quizFeedbackQuestionId' to 'QuizFeedbackQuestionId' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/QuizFeedbackRepository.cs",
                "region": {
                  "startLine": 225,
                  "startColumn": 49,
                  "endLine": 225,
                  "endColumn": 71
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1125",
          "level": "warning",
          "message": "Remove the unnecessary Boolean literal(s).",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/EnrollmentRepository.cs",
                "region": {
                  "startLine": 59,
                  "startColumn": 102,
                  "endLine": 59,
                  "endColumn": 109
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'quizFeedbackQuestionId' to 'QuizFeedbackQuestionId' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/QuizFeedbackRepository.cs",
                "region": {
                  "startLine": 287,
                  "startColumn": 49,
                  "endLine": 287,
                  "endColumn": 71
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1860",
          "level": "note",
          "message": "Prefer comparing 'Count' to 0 rather than using 'Any()', both for clarity and for performance",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/QuizFeedbackRepository.cs",
                "region": {
                  "startLine": 299,
                  "startColumn": 25,
                  "endLine": 299,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "DiagnosticPropertyKey": "Count"
            }
          }
        },
        {
          "ruleId": "CA1862",
          "level": "note",
          "message": "Prefer using 'string.Equals(string, StringComparison)' to perform a case-insensitive comparison, but keep in mind that this might cause subtle changes in behavior, so make sure to conduct thorough testing after applying the suggestion, or if culturally sensitive comparison is not required, consider using 'StringComparison.OrdinalIgnoreCase'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/QuizFeedbackRepository.cs",
                "region": {
                  "startLine": 245,
                  "startColumn": 25,
                  "endLine": 245,
                  "endColumn": 109
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "LeftOffendingMethod": null,
              "RightOffendingMethod": "ToUpper"
            }
          }
        },
        {
          "ruleId": "CA1862",
          "level": "note",
          "message": "Prefer using 'string.Equals(string, StringComparison)' to perform a case-insensitive comparison, but keep in mind that this might cause subtle changes in behavior, so make sure to conduct thorough testing after applying the suggestion, or if culturally sensitive comparison is not required, consider using 'StringComparison.OrdinalIgnoreCase'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/QuizQuestionRepository.cs",
                "region": {
                  "startLine": 475,
                  "startColumn": 47,
                  "endLine": 475,
                  "endColumn": 75
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "LeftOffendingMethod": "ToLower",
              "RightOffendingMethod": null
            }
          }
        },
        {
          "ruleId": "CA1862",
          "level": "note",
          "message": "Prefer using 'string.Equals(string, StringComparison)' to perform a case-insensitive comparison, but keep in mind that this might cause subtle changes in behavior, so make sure to conduct thorough testing after applying the suggestion, or if culturally sensitive comparison is not required, consider using 'StringComparison.OrdinalIgnoreCase'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/QuizQuestionRepository.cs",
                "region": {
                  "startLine": 476,
                  "startColumn": 48,
                  "endLine": 476,
                  "endColumn": 77
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "LeftOffendingMethod": "ToLower",
              "RightOffendingMethod": null
            }
          }
        },
        {
          "ruleId": "CA1860",
          "level": "note",
          "message": "Prefer comparing 'Count' to 0 rather than using 'Any()', both for clarity and for performance",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/QuizFeedbackRepository.cs",
                "region": {
                  "startLine": 338,
                  "startColumn": 25,
                  "endLine": 338,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "DiagnosticPropertyKey": "Count"
            }
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'IsValidQuestionType' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/QuizQuestionRepository.cs",
                "region": {
                  "startLine": 92,
                  "startColumn": 22,
                  "endLine": 92,
                  "endColumn": 41
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'ValidateTrueFalseOptions' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/QuizQuestionRepository.cs",
                "region": {
                  "startLine": 468,
                  "startColumn": 22,
                  "endLine": 468,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'ValidateUniqueOptions' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/Repository/QuizQuestionRepository.cs",
                "region": {
                  "startLine": 481,
                  "startColumn": 22,
                  "endLine": 481,
                  "endColumn": 43
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3251",
          "level": "warning",
          "message": "Supply an implementation for the partial method, otherwise this call will be ignored.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Data/DBContexts/LXPDbContext.cs",
                "region": {
                  "startLine": 766,
                  "startColumn": 9,
                  "endLine": 766,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        }
      ],
      "rules": {
        "CA1822": {
          "id": "CA1822",
          "shortDescription": "Mark members as static",
          "fullDescription": "Members that do not access instance data or call instance methods can be marked as static. After you mark the methods as static, the compiler will emit nonvirtual call sites to these members. This can give you a measurable performance gain for performance-sensitive code.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1822",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "PortedFromFxCop",
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA1860": {
          "id": "CA1860",
          "shortDescription": "Avoid using 'Enumerable.Any()' extension method",
          "fullDescription": "Prefer using 'IsEmpty', 'Count' or 'Length' properties whichever available, rather than calling 'Enumerable.Any()'. The intent is clearer and it is more performant than using 'Enumerable.Any()' extension method.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1860",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA1862": {
          "id": "CA1862",
          "shortDescription": "Use the 'StringComparison' method overloads to perform case-insensitive string comparisons",
          "fullDescription": "Avoid calling 'ToLower', 'ToUpper', 'ToLowerInvariant' and 'ToUpperInvariant' to perform case-insensitive string comparisons, as in 'string.ToLower() == string.ToLower()', because they lead to an allocation. Instead, use 'string.Equals(string, StringComparison)' to perform case-insensitive comparisons. Switching to using an overload that takes a 'StringComparison' might cause subtle changes in behavior, so it's important to conduct thorough testing after applying the suggestion. Additionally, if a culturally sensitive comparison is not required, consider using 'StringComparison.OrdinalIgnoreCase'.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1862",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA2208": {
          "id": "CA2208",
          "shortDescription": "Instantiate argument exceptions correctly",
          "fullDescription": "A call is made to the default (parameterless) constructor of an exception type that is or derives from ArgumentException, or an incorrect string argument is passed to a parameterized constructor of an exception type that is or derives from ArgumentException.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2208",
          "properties": {
            "category": "Usage",
            "isEnabledByDefault": true,
            "tags": [
              "PortedFromFxCop",
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CS0168": {
          "id": "CS0168",
          "shortDescription": "Variable is declared but never used",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS0168)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS1030": {
          "id": "CS1030",
          "shortDescription": "#warning directive",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS1030)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS1998": {
          "id": "CS1998",
          "shortDescription": "Async method lacks 'await' operators and will run synchronously",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS1998)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8600": {
          "id": "CS8600",
          "shortDescription": "Converting null literal or possible null value to non-nullable type.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8600)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8602": {
          "id": "CS8602",
          "shortDescription": "Dereference of a possibly null reference.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8602)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8603": {
          "id": "CS8603",
          "shortDescription": "Possible null reference return.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8603)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8604": {
          "id": "CS8604",
          "shortDescription": "Possible null reference argument.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8604)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8613": {
          "id": "CS8613",
          "shortDescription": "Nullability of reference types in return type doesn't match implicitly implemented member.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8613)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8618": {
          "id": "CS8618",
          "shortDescription": "Non-nullable field must contain a non-null value when exiting constructor. Consider declaring as nullable.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8618)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8619": {
          "id": "CS8619",
          "shortDescription": "Nullability of reference types in value doesn't match target type.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8619)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "S101": {
          "id": "S101",
          "shortDescription": "Types should be named in PascalCase",
          "fullDescription": "Shared naming conventions allow teams to collaborate efficiently. This rule checks whether or not type names are using PascalCase. To reduce noise, two consecutive upper case characters are allowed unless they form the whole type name. So, MyXClass is compliant, but XC on its own is not.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-101",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1066": {
          "id": "S1066",
          "shortDescription": "Collapsible \"if\" statements should be merged",
          "fullDescription": "Merging collapsible if statements increases the code’s readability.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1066",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S112": {
          "id": "S112",
          "shortDescription": "General exceptions should never be thrown",
          "fullDescription": "Throwing such general exceptions as Exception, SystemException, ApplicationException, IndexOutOfRangeException, NullReferenceException, OutOfMemoryException and ExecutionEngineException prevents calling methods from handling true, system-generated exceptions differently than application-generated errors.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-112",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1125": {
          "id": "S1125",
          "shortDescription": "Boolean literals should not be redundant",
          "fullDescription": "Redundant Boolean literals should be removed from expressions to improve readability.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1125",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S125": {
          "id": "S125",
          "shortDescription": "Sections of code should not be commented out",
          "fullDescription": "Programmers should not comment out code as it bloats programs and reduces readability.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-125",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2068": {
          "id": "S2068",
          "shortDescription": "Hard-coded credentials are security-sensitive",
          "fullDescription": "Because it is easy to extract strings from an application source code or binary, credentials should not be hard-coded. This is particularly true for applications that are distributed or that are open-source.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2068",
          "properties": {
            "category": "Blocker Security Hotspot",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2971": {
          "id": "S2971",
          "shortDescription": "\"IEnumerable\" LINQs should be simplified",
          "fullDescription": "In the interests of readability, code that can be simplified should be simplified. To that end, there are several ways IEnumerable language integrated queries (LINQ) can be simplified",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2971",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3251": {
          "id": "S3251",
          "shortDescription": "Implementations should be provided for \"partial\" methods",
          "fullDescription": "partial methods allow an increased degree of flexibility in programming a system. Hooks can be added to generated code by invoking methods that define their signature, but might not have an implementation yet. But if the implementation is still missing when the code makes it to production, the compiler silently removes the call. In the best case scenario, such calls simply represent cruft, but in they worst case they are critical, missing functionality, the loss of which will lead to unexpected results at runtime.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3251",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3776": {
          "id": "S3776",
          "shortDescription": "Cognitive Complexity of methods should not be too high",
          "fullDescription": "Cognitive Complexity is a measure of how hard the control flow of a method is to understand. Methods with high Cognitive Complexity will be difficult to maintain.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3776",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3928": {
          "id": "S3928",
          "shortDescription": "Parameter names used into ArgumentException constructors should match an existing one ",
          "fullDescription": "Some constructors of the ArgumentException, ArgumentNullException, ArgumentOutOfRangeException and DuplicateWaitObjectException classes must be fed with a valid parameter name. This rule raises an issue in two cases:",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3928",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S4144": {
          "id": "S4144",
          "shortDescription": "Methods should not have identical implementations",
          "fullDescription": "When two methods have the same implementation, either it was a mistake - something else was intended - or the duplication was intentional, but may be confusing to maintainers. In the latter case, one implementation should invoke the other.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-4144",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S4457": {
          "id": "S4457",
          "shortDescription": "Parameter validation in \"async\"/\"await\" methods should be wrapped",
          "fullDescription": "Because of the way async/await methods are rewritten by the compiler, any exceptions thrown during the parameters check will happen only when the task is observed. That could happen far away from the source of the buggy code or never happen for fire-and-forget tasks.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-4457",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S4487": {
          "id": "S4487",
          "shortDescription": "Unread \"private\" fields should be removed",
          "fullDescription": "Private fields only used to store values without reading them later is a case of dead store. So changing the value of such field is useless and most probably indicates a serious error in the code.",
          "defaultLevel": "note",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-4487",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay",
              "Unnecessary"
            ]
          }
        },
        "S927": {
          "id": "S927",
          "shortDescription": "Parameter names should match base declaration and other partial definitions",
          "fullDescription": "The name of a parameter in an externally visible. This rule raises an issue when method override does not match the name of the parameter in the base declaration of the method, or the name of the parameter in the interface declaration of the method or the name of any other partial definition.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-927",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        }
      }
    }
  ]
}