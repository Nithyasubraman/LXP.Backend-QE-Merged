{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Microsoft (R) Visual C# Compiler",
        "version": "4.8.0.0",
        "fileVersion": "4.8.0-3.23524.11 (f43cd10b)",
        "semanticVersion": "4.8.0",
        "language": "en-GB"
      },
      "results": [
        {
          "ruleId": "CS8604",
          "level": "warning",
          "message": "Possible null reference argument for parameter 'plainText' in 'string Encryption.ComputePasswordToSha256Hash(string plainText)'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/UpdatePasswordService.cs",
                "region": {
                  "startLine": 24,
                  "startColumn": 136,
                  "endLine": 24,
                  "endColumn": 162
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8604",
          "level": "warning",
          "message": "Possible null reference argument for parameter 'Email' in 'Task<Learner> IUpdatePasswordRepository.LearnerByEmailAndPassword(string Email, string Password)'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/UpdatePasswordService.cs",
                "region": {
                  "startLine": 24,
                  "startColumn": 75,
                  "endLine": 24,
                  "endColumn": 95
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8604",
          "level": "warning",
          "message": "Possible null reference argument for parameter 'plainText' in 'string Encryption.ComputePasswordToSha256Hash(string plainText)'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/UpdatePasswordService.cs",
                "region": {
                  "startLine": 29,
                  "startColumn": 84,
                  "endLine": 29,
                  "endColumn": 110
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS4014",
          "level": "warning",
          "message": "Because this call is not awaited, execution of the current method continues before the call is completed. Consider applying the 'await' operator to the result of the call.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/EnrollmentService.cs",
                "region": {
                  "startLine": 69,
                  "startColumn": 17,
                  "endLine": 69,
                  "endColumn": 63
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS1998",
          "level": "warning",
          "message": "This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/EnrollmentService.cs",
                "region": {
                  "startLine": 41,
                  "startColumn": 33,
                  "endLine": 41,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS4014",
          "level": "warning",
          "message": "Because this call is not awaited, execution of the current method continues before the call is completed. Consider applying the 'await' operator to the result of the call.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/CategoryServices.cs",
                "region": {
                  "startLine": 45,
                  "startColumn": 17,
                  "endLine": 45,
                  "endColumn": 64
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8604",
          "level": "warning",
          "message": "Possible null reference argument for parameter 'Category' in 'Task<bool> ICategoryRepository.AnyCategoryByCategoryName(string Category)'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/CategoryServices.cs",
                "region": {
                  "startLine": 30,
                  "startColumn": 89,
                  "endLine": 30,
                  "endColumn": 106
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8601",
          "level": "warning",
          "message": "Possible null reference assignment.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/CategoryServices.cs",
                "region": {
                  "startLine": 43,
                  "startColumn": 33,
                  "endLine": 43,
                  "endColumn": 51
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS0472",
          "level": "warning",
          "message": "The result of the expression is always 'true' since a value of type 'bool' is never equal to 'null' of type 'bool?'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/ForgetService.cs",
                "region": {
                  "startLine": 25,
                  "startColumn": 17,
                  "endLine": 25,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 2
          }
        },
        {
          "ruleId": "CS8604",
          "level": "warning",
          "message": "Possible null reference argument for parameter 'input' in 'Guid Guid.Parse(string input)'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/CourseServices.cs",
                "region": {
                  "startLine": 47,
                  "startColumn": 46,
                  "endLine": 47,
                  "endColumn": 61
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8600",
          "level": "warning",
          "message": "Converting null literal or possible null value to non-nullable type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/TopicFeedbackService.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 27,
                  "endLine": 26,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8604",
          "level": "warning",
          "message": "Possible null reference argument for parameter 'options' in 'bool TopicFeedbackService.ValidateOptionsByFeedbackQuestionType(string questionType, List<TopicFeedbackQuestionsOptionViewModel> options)'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/TopicFeedbackService.cs",
                "region": {
                  "startLine": 29,
                  "startColumn": 92,
                  "endLine": 29,
                  "endColumn": 99
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/CourseServices.cs",
                "region": {
                  "startLine": 103,
                  "startColumn": 46,
                  "endLine": 103,
                  "endColumn": 74
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8604",
          "level": "warning",
          "message": "Possible null reference argument for parameter 'plainText' in 'string SHA256Encrypt.ComputePasswordToSha256Hash(string plainText)'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/LearnerService.cs",
                "region": {
                  "startLine": 185,
                  "startColumn": 74,
                  "endLine": 185,
                  "endColumn": 104
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8604",
          "level": "warning",
          "message": "Possible null reference argument for parameter 's' in 'DateOnly DateOnly.ParseExact(string s, string format, IFormatProvider? provider, DateTimeStyles style = DateTimeStyles.None)'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/LearnerService.cs",
                "region": {
                  "startLine": 202,
                  "startColumn": 47,
                  "endLine": 202,
                  "endColumn": 72
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS4014",
          "level": "warning",
          "message": "Because this call is not awaited, execution of the current method continues before the call is completed. Consider applying the 'await' operator to the result of the call.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/PasswordHistoryService.cs",
                "region": {
                  "startLine": 137,
                  "startColumn": 13,
                  "endLine": 137,
                  "endColumn": 54
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8603",
          "level": "warning",
          "message": "Possible null reference return.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/MaterialServices.cs",
                "region": {
                  "startLine": 80,
                  "startColumn": 24,
                  "endLine": 80,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/ProfileService.cs",
                "region": {
                  "startLine": 110,
                  "startColumn": 46,
                  "endLine": 110,
                  "endColumn": 74
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/MaterialServices.cs",
                "region": {
                  "startLine": 107,
                  "startColumn": 46,
                  "endLine": 107,
                  "endColumn": 74
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS4014",
          "level": "warning",
          "message": "Because this call is not awaited, execution of the current method continues before the call is completed. Consider applying the 'await' operator to the result of the call.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/Services.cs",
                "region": {
                  "startLine": 147,
                  "startColumn": 17,
                  "endLine": 147,
                  "endColumn": 74
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8603",
          "level": "warning",
          "message": "Possible null reference return.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/QuizService.cs",
                "region": {
                  "startLine": 93,
                  "startColumn": 24,
                  "endLine": 93,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8604",
          "level": "warning",
          "message": "Possible null reference argument for parameter 'plainText' in 'string Encryption.ComputePasswordToSha256Hash(string plainText)'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/Services.cs",
                "region": {
                  "startLine": 166,
                  "startColumn": 132,
                  "endLine": 166,
                  "endColumn": 158
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8604",
          "level": "warning",
          "message": "Possible null reference argument for parameter 'Email' in 'Task<Learner> IRepository.LearnerByEmailAndPassword(string Email, string Password)'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/Services.cs",
                "region": {
                  "startLine": 166,
                  "startColumn": 71,
                  "endLine": 166,
                  "endColumn": 91
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8604",
          "level": "warning",
          "message": "Possible null reference argument for parameter 'plainText' in 'string Encryption.ComputePasswordToSha256Hash(string plainText)'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/Services.cs",
                "region": {
                  "startLine": 171,
                  "startColumn": 84,
                  "endLine": 171,
                  "endColumn": 110
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8600",
          "level": "warning",
          "message": "Converting null literal or possible null value to non-nullable type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/BulkQuestionService.cs",
                "region": {
                  "startLine": 46,
                  "startColumn": 52,
                  "endLine": 46,
                  "endColumn": 96
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8600",
          "level": "warning",
          "message": "Converting null literal or possible null value to non-nullable type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/BulkQuestionService.cs",
                "region": {
                  "startLine": 55,
                  "startColumn": 43,
                  "endLine": 55,
                  "endColumn": 84
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8600",
          "level": "warning",
          "message": "Converting null literal or possible null value to non-nullable type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/BulkQuestionService.cs",
                "region": {
                  "startLine": 59,
                  "startColumn": 47,
                  "endLine": 59,
                  "endColumn": 88
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8601",
          "level": "warning",
          "message": "Possible null reference assignment.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/BulkQuestionService.cs",
                "region": {
                  "startLine": 121,
                  "startColumn": 52,
                  "endLine": 121,
                  "endColumn": 77
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8601",
          "level": "warning",
          "message": "Possible null reference assignment.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/BulkQuestionService.cs",
                "region": {
                  "startLine": 122,
                  "startColumn": 48,
                  "endLine": 122,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/BulkQuestionService.cs",
                "region": {
                  "startLine": 132,
                  "startColumn": 53,
                  "endLine": 132,
                  "endColumn": 73
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8604",
          "level": "warning",
          "message": "Possible null reference argument for parameter 'source' in 'bool Enumerable.Contains<string>(IEnumerable<string> source, string value)'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/BulkQuestionService.cs",
                "region": {
                  "startLine": 140,
                  "startColumn": 57,
                  "endLine": 140,
                  "endColumn": 84
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/BulkQuestionService.cs",
                "region": {
                  "startLine": 181,
                  "startColumn": 20,
                  "endLine": 181,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/BulkQuestionService.cs",
                "region": {
                  "startLine": 185,
                  "startColumn": 21,
                  "endLine": 185,
                  "endColumn": 48
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/BulkQuestionService.cs",
                "region": {
                  "startLine": 191,
                  "startColumn": 20,
                  "endLine": 191,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/BulkQuestionService.cs",
                "region": {
                  "startLine": 193,
                  "startColumn": 20,
                  "endLine": 193,
                  "endColumn": 47
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/BulkQuestionService.cs",
                "region": {
                  "startLine": 200,
                  "startColumn": 31,
                  "endLine": 200,
                  "endColumn": 51
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/BulkQuestionService.cs",
                "region": {
                  "startLine": 201,
                  "startColumn": 38,
                  "endLine": 201,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/QuizEngineService.cs",
                "region": {
                  "startLine": 275,
                  "startColumn": 56,
                  "endLine": 275,
                  "endColumn": 82
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8600",
          "level": "warning",
          "message": "Converting null literal or possible null value to non-nullable type.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/QuizEngineService.cs",
                "region": {
                  "startLine": 303,
                  "startColumn": 83,
                  "endLine": 303,
                  "endColumn": 129
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8604",
          "level": "warning",
          "message": "Possible null reference argument for parameter 'source' in 'IEnumerable<AnswerSubmissionModel> Enumerable.Select<KeyValuePair<Guid, List<string>>, AnswerSubmissionModel>(IEnumerable<KeyValuePair<Guid, List<string>>> source, Func<KeyValuePair<Guid, List<string>>, AnswerSubmissionModel> selector)'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/QuizEngineService.cs",
                "region": {
                  "startLine": 306,
                  "startColumn": 46,
                  "endLine": 306,
                  "endColumn": 61
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/IServices/IFeedbackResponseService.cs",
                "region": {
                  "startLine": 28,
                  "startColumn": 1,
                  "endLine": 28,
                  "endColumn": 57
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/IServices/ILoginService.cs",
                "region": {
                  "startLine": 10,
                  "startColumn": 9,
                  "endLine": 10,
                  "endColumn": 51
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/IServices/IProfileService.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/DashboardService.cs",
                "region": {
                  "startLine": 40,
                  "startColumn": 13,
                  "endLine": 40,
                  "endColumn": 67
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/DashboardService.cs",
                "region": {
                  "startLine": 67,
                  "startColumn": 9,
                  "endLine": 67,
                  "endColumn": 12
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2933",
          "level": "warning",
          "message": "Make '_levelMapper' 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/CourseLevelServices.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 24,
                  "endLine": 13,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/EnrollmentService.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 1,
                  "endLine": 13,
                  "endColumn": 20
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2933",
          "level": "warning",
          "message": "Make '_categoryMapper' 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/CategoryServices.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 24,
                  "endLine": 18,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/FeedbackResponseService.cs",
                "region": {
                  "startLine": 91,
                  "startColumn": 13,
                  "endLine": 91,
                  "endColumn": 110
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/FeedbackResponseService.cs",
                "region": {
                  "startLine": 148,
                  "startColumn": 13,
                  "endLine": 148,
                  "endColumn": 110
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/FeedbackResponseService.cs",
                "region": {
                  "startLine": 188,
                  "startColumn": 1,
                  "endLine": 188,
                  "endColumn": 57
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4487",
          "level": "warning",
          "message": "Remove this unread private field '_quizRepository' or refactor the code to use its value.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/BulkQuestionService.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 42,
                  "endLine": 18,
                  "endColumn": 57
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/LearnerService.cs",
                "region": {
                  "startLine": 2,
                  "startColumn": 1,
                  "endLine": 2,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/LearnerService.cs",
                "region": {
                  "startLine": 163,
                  "startColumn": 9,
                  "endLine": 163,
                  "endColumn": 83
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/LearnerService.cs",
                "region": {
                  "startLine": 252,
                  "startColumn": 9,
                  "endLine": 252,
                  "endColumn": 12
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/LoginService.cs",
                "region": {
                  "startLine": 139,
                  "startColumn": 9,
                  "endLine": 139,
                  "endColumn": 12
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/PasswordHistoryService.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4487",
          "level": "warning",
          "message": "Remove this unread private field '_webHostEnvironment' or refactor the code to use its value.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/EnrollmentService.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 46,
                  "endLine": 26,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/ProfileService.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 20
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/ProfileService.cs",
                "region": {
                  "startLine": 96,
                  "startColumn": 13,
                  "endLine": 96,
                  "endColumn": 100
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2933",
          "level": "warning",
          "message": "Make '_materialTypeMapper' 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/MaterialTypeServices.cs",
                "region": {
                  "startLine": 16,
                  "startColumn": 24,
                  "endLine": 16,
                  "endColumn": 43
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4487",
          "level": "warning",
          "message": "Remove this unread private field '_httpContextAccessor' or refactor the code to use its value.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/EnrollmentService.cs",
                "region": {
                  "startLine": 27,
                  "startColumn": 47,
                  "endLine": 27,
                  "endColumn": 67
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2933",
          "level": "warning",
          "message": "Make '_moviemapper' 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/LoginService.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 24,
                  "endLine": 23,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2933",
          "level": "warning",
          "message": "Make '_courseMapper' 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/CourseServices.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 24,
                  "endLine": 23,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2933",
          "level": "warning",
          "message": "Make '_learnerMapper' 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/LearnerService.cs",
                "region": {
                  "startLine": 164,
                  "startColumn": 24,
                  "endLine": 164,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4487",
          "level": "warning",
          "message": "Remove this unread private field '_moviemapper' or refactor the code to use its value.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/LoginService.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 24,
                  "endLine": 23,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/QuizEngineService.cs",
                "region": {
                  "startLine": 339,
                  "startColumn": 9,
                  "endLine": 339,
                  "endColumn": 12
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4487",
          "level": "warning",
          "message": "Remove this unread private field '_dbcontext' or refactor the code to use its value.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/LoginService.cs",
                "region": {
                  "startLine": 25,
                  "startColumn": 39,
                  "endLine": 25,
                  "endColumn": 49
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1135",
          "level": "warning",
          "message": "Complete the task associated to this 'TODO' comment.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/QuizEngineService.cs",
                "region": {
                  "startLine": 298,
                  "startColumn": 16,
                  "endLine": 298,
                  "endColumn": 20
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4487",
          "level": "warning",
          "message": "Remove this unread private field '_courseMapper' or refactor the code to use its value.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/CourseServices.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 24,
                  "endLine": 23,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2933",
          "level": "warning",
          "message": "Make '_learnerProfileMapper' 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/ProfileService.cs",
                "region": {
                  "startLine": 73,
                  "startColumn": 24,
                  "endLine": 73,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4487",
          "level": "warning",
          "message": "Remove this unread private field '_environment' or refactor the code to use its value.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/LearnerServices.cs",
                "region": {
                  "startLine": 12,
                  "startColumn": 46,
                  "endLine": 12,
                  "endColumn": 58
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4487",
          "level": "warning",
          "message": "Remove this unread private field '_contextAccessor' or refactor the code to use its value.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/LearnerServices.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 47,
                  "endLine": 13,
                  "endColumn": 63
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/QuizService.cs",
                "region": {
                  "startLine": 127,
                  "startColumn": 1,
                  "endLine": 127,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1144",
          "level": "warning",
          "message": "Remove the unused private method 'SomeHashFunction'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/PasswordHistoryService.cs",
                "region": {
                  "startLine": 151,
                  "startColumn": 9,
                  "endLine": 154,
                  "endColumn": 10
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2933",
          "level": "warning",
          "message": "Make '_courseMaterialMapper' 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/MaterialServices.cs",
                "region": {
                  "startLine": 24,
                  "startColumn": 24,
                  "endLine": 24,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2933",
          "level": "warning",
          "message": "Make '_moviemapper' 'readonly'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/Services.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 24,
                  "endLine": 18,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4487",
          "level": "warning",
          "message": "Remove this unread private field '_moviemapper' or refactor the code to use its value.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/Services.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 24,
                  "endLine": 18,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'courseTopic' to 'topic' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/CourseTopicServices.cs",
                "region": {
                  "startLine": 27,
                  "startColumn": 69,
                  "endLine": 27,
                  "endColumn": 80
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'LearnerId' to 'learnerid' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/LearnerServices.cs",
                "region": {
                  "startLine": 30,
                  "startColumn": 60,
                  "endLine": 30,
                  "endColumn": 69
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3928",
          "level": "warning",
          "message": "The parameter name 'QuizFeedbackQuestionId' is not declared in the argument list.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/FeedbackResponseService.cs",
                "region": {
                  "startLine": 65,
                  "startColumn": 23,
                  "endLine": 65,
                  "endColumn": 126
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3928",
          "level": "warning",
          "message": "The parameter name 'LearnerId' is not declared in the argument list.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/FeedbackResponseService.cs",
                "region": {
                  "startLine": 70,
                  "startColumn": 23,
                  "endLine": 70,
                  "endColumn": 103
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3928",
          "level": "warning",
          "message": "The parameter name 'OptionText' is not declared in the argument list.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/FeedbackResponseService.cs",
                "region": {
                  "startLine": 86,
                  "startColumn": 27,
                  "endLine": 86,
                  "endColumn": 118
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'LearnerId' to 'learnerid' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/LearnerServices.cs",
                "region": {
                  "startLine": 36,
                  "startColumn": 64,
                  "endLine": 36,
                  "endColumn": 73
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1481",
          "level": "warning",
          "message": "Remove the unused local variable 'learner'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/EnrollmentService.cs",
                "region": {
                  "startLine": 48,
                  "startColumn": 25,
                  "endLine": 48,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1481",
          "level": "warning",
          "message": "Remove the unused local variable 'course'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/EnrollmentService.cs",
                "region": {
                  "startLine": 50,
                  "startColumn": 24,
                  "endLine": 50,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2583",
          "level": "warning",
          "message": "Change this condition so that it does not always evaluate to 'true'; some subsequent code is never executed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/ForgetService.cs",
                "region": {
                  "startLine": 25,
                  "startColumn": 17,
                  "endLine": 25,
                  "endColumn": 39
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Core/Services/ForgetService.cs",
                "region": {
                  "startLine": 39,
                  "startColumn": 13,
                  "endLine": 41,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1481",
          "level": "warning",
          "message": "Remove the unused local variable 'course'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/DashboardService.cs",
                "region": {
                  "startLine": 62,
                  "startColumn": 17,
                  "endLine": 62,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3928",
          "level": "warning",
          "message": "The parameter name 'TopicFeedbackQuestionId' is not declared in the argument list.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/FeedbackResponseService.cs",
                "region": {
                  "startLine": 122,
                  "startColumn": 23,
                  "endLine": 122,
                  "endColumn": 127
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3928",
          "level": "warning",
          "message": "The parameter name 'LearnerId' is not declared in the argument list.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/FeedbackResponseService.cs",
                "region": {
                  "startLine": 127,
                  "startColumn": 23,
                  "endLine": 127,
                  "endColumn": 103
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3928",
          "level": "warning",
          "message": "The parameter name 'OptionText' is not declared in the argument list.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/FeedbackResponseService.cs",
                "region": {
                  "startLine": 143,
                  "startColumn": 27,
                  "endLine": 143,
                  "endColumn": 118
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1125",
          "level": "warning",
          "message": "Remove the unnecessary Boolean literal(s).",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/LoginService.cs",
                "region": {
                  "startLine": 53,
                  "startColumn": 22,
                  "endLine": 53,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1199",
          "level": "warning",
          "message": "Extract this nested code block into a separate method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/LoginService.cs",
                "region": {
                  "startLine": 85,
                  "startColumn": 25,
                  "endLine": 85,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1199",
          "level": "warning",
          "message": "Extract this nested code block into a separate method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/LoginService.cs",
                "region": {
                  "startLine": 108,
                  "startColumn": 25,
                  "endLine": 108,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1199",
          "level": "warning",
          "message": "Extract this nested code block into a separate method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/LoginService.cs",
                "region": {
                  "startLine": 124,
                  "startColumn": 17,
                  "endLine": 124,
                  "endColumn": 18
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/TopicFeedbackService.cs",
                "region": {
                  "startLine": 46,
                  "startColumn": 17,
                  "endLine": 46,
                  "endColumn": 19
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Core/Services/TopicFeedbackService.cs",
                "region": {
                  "startLine": 44,
                  "startColumn": 13,
                  "endLine": 44,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1850",
          "level": "note",
          "message": "Prefer static 'System.Security.Cryptography.SHA256.HashData' method over 'ComputeHash'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/LoginService.cs",
                "region": {
                  "startLine": 59,
                  "startColumn": 48,
                  "endLine": 59,
                  "endColumn": 111
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Core/Services/LoginService.cs",
                "region": {
                  "startLine": 57,
                  "startColumn": 31,
                  "endLine": 57,
                  "endColumn": 55
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ComputeTypePropertyKey": "ComputeHash",
              "DeleteHashCreationPropertyKey": "DeleteHashCreationPropertyKey",
              "HashCreationIndexPropertyKey": "0",
              "TargetHashTypeDiagnosticPropertyKey": "SHA256"
            }
          }
        },
        {
          "ruleId": "S2971",
          "level": "warning",
          "message": "Use 'Count' property here instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/DashboardService.cs",
                "region": {
                  "startLine": 77,
                  "startColumn": 71,
                  "endLine": 77,
                  "endColumn": 76
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2971",
          "level": "warning",
          "message": "Use 'Count' property here instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/DashboardService.cs",
                "region": {
                  "startLine": 78,
                  "startColumn": 67,
                  "endLine": 78,
                  "endColumn": 72
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2971",
          "level": "warning",
          "message": "Use 'Count' property here instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/DashboardService.cs",
                "region": {
                  "startLine": 79,
                  "startColumn": 83,
                  "endLine": 79,
                  "endColumn": 88
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1862",
          "level": "note",
          "message": "Prefer using 'string.Equals(string, StringComparison)' to perform a case-insensitive comparison, but keep in mind that this might cause subtle changes in behavior, so make sure to conduct thorough testing after applying the suggestion, or if culturally sensitive comparison is not required, consider using 'StringComparison.OrdinalIgnoreCase'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/FeedbackResponseService.cs",
                "region": {
                  "startLine": 79,
                  "startColumn": 17,
                  "endLine": 79,
                  "endColumn": 97
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "LeftOffendingMethod": null,
              "RightOffendingMethod": "ToUpper"
            }
          }
        },
        {
          "ruleId": "CA2208",
          "level": "note",
          "message": "Method ValidateAndSubmitQuizFeedback passes 'QuizFeedbackQuestionId' as the paramName argument to a ArgumentException constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/FeedbackResponseService.cs",
                "region": {
                  "startLine": 65,
                  "startColumn": 23,
                  "endLine": 65,
                  "endColumn": 126
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2208",
          "level": "note",
          "message": "Method ValidateAndSubmitQuizFeedback passes 'LearnerId' as the paramName argument to a ArgumentException constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/FeedbackResponseService.cs",
                "region": {
                  "startLine": 70,
                  "startColumn": 23,
                  "endLine": 70,
                  "endColumn": 103
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2208",
          "level": "note",
          "message": "Method ValidateAndSubmitQuizFeedback passes 'OptionText' as the paramName argument to a ArgumentException constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/FeedbackResponseService.cs",
                "region": {
                  "startLine": 86,
                  "startColumn": 27,
                  "endLine": 86,
                  "endColumn": 118
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1510",
          "level": "note",
          "message": "Use 'ArgumentNullException.ThrowIfNull' instead of explicitly throwing a new exception instance",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/FeedbackResponseService.cs",
                "region": {
                  "startLine": 59,
                  "startColumn": 13,
                  "endLine": 60,
                  "endColumn": 75
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Core/Services/FeedbackResponseService.cs",
                "region": {
                  "startLine": 59,
                  "startColumn": 17,
                  "endLine": 59,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1862",
          "level": "note",
          "message": "Prefer using 'string.Equals(string, StringComparison)' to perform a case-insensitive comparison, but keep in mind that this might cause subtle changes in behavior, so make sure to conduct thorough testing after applying the suggestion, or if culturally sensitive comparison is not required, consider using 'StringComparison.OrdinalIgnoreCase'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/FeedbackResponseService.cs",
                "region": {
                  "startLine": 136,
                  "startColumn": 17,
                  "endLine": 136,
                  "endColumn": 98
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "LeftOffendingMethod": null,
              "RightOffendingMethod": "ToUpper"
            }
          }
        },
        {
          "ruleId": "CA2208",
          "level": "note",
          "message": "Method ValidateAndSubmitTopicFeedback passes 'TopicFeedbackQuestionId' as the paramName argument to a ArgumentException constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/FeedbackResponseService.cs",
                "region": {
                  "startLine": 122,
                  "startColumn": 23,
                  "endLine": 122,
                  "endColumn": 127
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2208",
          "level": "note",
          "message": "Method ValidateAndSubmitTopicFeedback passes 'LearnerId' as the paramName argument to a ArgumentException constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/FeedbackResponseService.cs",
                "region": {
                  "startLine": 127,
                  "startColumn": 23,
                  "endLine": 127,
                  "endColumn": 103
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2208",
          "level": "note",
          "message": "Method ValidateAndSubmitTopicFeedback passes 'OptionText' as the paramName argument to a ArgumentException constructor. Replace this argument with one of the method's parameter names. Note that the provided parameter name should have the exact casing as declared on the method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/FeedbackResponseService.cs",
                "region": {
                  "startLine": 143,
                  "startColumn": 27,
                  "endLine": 143,
                  "endColumn": 118
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1510",
          "level": "note",
          "message": "Use 'ArgumentNullException.ThrowIfNull' instead of explicitly throwing a new exception instance",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/FeedbackResponseService.cs",
                "region": {
                  "startLine": 116,
                  "startColumn": 13,
                  "endLine": 117,
                  "endColumn": 75
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Core/Services/FeedbackResponseService.cs",
                "region": {
                  "startLine": 116,
                  "startColumn": 17,
                  "endLine": 116,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1829",
          "level": "note",
          "message": "Use the \"Count\" property instead of Enumerable.Count()",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/DashboardService.cs",
                "region": {
                  "startLine": 77,
                  "startColumn": 32,
                  "endLine": 77,
                  "endColumn": 78
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "PropertyNameKey": "Count"
            }
          }
        },
        {
          "ruleId": "CA1829",
          "level": "note",
          "message": "Use the \"Count\" property instead of Enumerable.Count()",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/DashboardService.cs",
                "region": {
                  "startLine": 78,
                  "startColumn": 30,
                  "endLine": 78,
                  "endColumn": 74
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "PropertyNameKey": "Count"
            }
          }
        },
        {
          "ruleId": "CA1829",
          "level": "note",
          "message": "Use the \"Count\" property instead of Enumerable.Count()",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/DashboardService.cs",
                "region": {
                  "startLine": 79,
                  "startColumn": 38,
                  "endLine": 79,
                  "endColumn": 90
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "PropertyNameKey": "Count"
            }
          }
        },
        {
          "ruleId": "CA1850",
          "level": "note",
          "message": "Prefer static 'System.Security.Cryptography.SHA256.HashData' method over 'ComputeHash'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/PasswordHistoryService.cs",
                "region": {
                  "startLine": 146,
                  "startColumn": 35,
                  "endLine": 146,
                  "endColumn": 87
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Core/Services/PasswordHistoryService.cs",
                "region": {
                  "startLine": 144,
                  "startColumn": 24,
                  "endLine": 144,
                  "endColumn": 77
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ComputeTypePropertyKey": "ComputeHash",
              "DeleteHashCreationPropertyKey": "DeleteHashCreationPropertyKey",
              "HashCreationIndexPropertyKey": "0",
              "TargetHashTypeDiagnosticPropertyKey": "SHA256"
            }
          }
        },
        {
          "ruleId": "CA1862",
          "level": "note",
          "message": "Prefer using 'string.Equals(string, StringComparison)' to perform a case-insensitive comparison, but keep in mind that this might cause subtle changes in behavior, so make sure to conduct thorough testing after applying the suggestion, or if culturally sensitive comparison is not required, consider using 'StringComparison.OrdinalIgnoreCase'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/TopicFeedbackService.cs",
                "region": {
                  "startLine": 88,
                  "startColumn": 21,
                  "endLine": 88,
                  "endColumn": 110
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "LeftOffendingMethod": null,
              "RightOffendingMethod": "ToUpper"
            }
          }
        },
        {
          "ruleId": "CA1862",
          "level": "note",
          "message": "Prefer using 'string.Equals(string, StringComparison)' to perform a case-insensitive comparison, but keep in mind that this might cause subtle changes in behavior, so make sure to conduct thorough testing after applying the suggestion, or if culturally sensitive comparison is not required, consider using 'StringComparison.OrdinalIgnoreCase'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/TopicFeedbackService.cs",
                "region": {
                  "startLine": 24,
                  "startColumn": 17,
                  "endLine": 24,
                  "endColumn": 99
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "LeftOffendingMethod": null,
              "RightOffendingMethod": "ToUpper"
            }
          }
        },
        {
          "ruleId": "CA1862",
          "level": "note",
          "message": "Prefer using 'string.Equals(string, StringComparison)' to perform a case-insensitive comparison, but keep in mind that this might cause subtle changes in behavior, so make sure to conduct thorough testing after applying the suggestion, or if culturally sensitive comparison is not required, consider using 'StringComparison.OrdinalIgnoreCase'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/TopicFeedbackService.cs",
                "region": {
                  "startLine": 44,
                  "startColumn": 17,
                  "endLine": 44,
                  "endColumn": 99
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "LeftOffendingMethod": null,
              "RightOffendingMethod": "ToUpper"
            }
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'HashPassword' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/PasswordHistoryService.cs",
                "region": {
                  "startLine": 142,
                  "startColumn": 24,
                  "endLine": 142,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'quizFeedbackQuestionId' to 'QuizFeedbackQuestionId' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/QuizFeedbackService.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 77,
                  "endLine": 31,
                  "endColumn": 99
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 18 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/ExcelToJsonService.cs",
                "region": {
                  "startLine": 60,
                  "startColumn": 48,
                  "endLine": 60,
                  "endColumn": 64
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Core/Services/ExcelToJsonService.cs",
                "region": {
                  "startLine": 64,
                  "startColumn": 13,
                  "endLine": 64,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Core/Services/ExcelToJsonService.cs",
                "region": {
                  "startLine": 66,
                  "startColumn": 17,
                  "endLine": 66,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Core/Services/ExcelToJsonService.cs",
                "region": {
                  "startLine": 68,
                  "startColumn": 21,
                  "endLine": 68,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Core/Services/ExcelToJsonService.cs",
                "region": {
                  "startLine": 68,
                  "startColumn": 54,
                  "endLine": 68,
                  "endColumn": 56
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Core/Services/ExcelToJsonService.cs",
                "region": {
                  "startLine": 76,
                  "startColumn": 17,
                  "endLine": 76,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Core/Services/ExcelToJsonService.cs",
                "region": {
                  "startLine": 78,
                  "startColumn": 21,
                  "endLine": 78,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Core/Services/ExcelToJsonService.cs",
                "region": {
                  "startLine": 78,
                  "startColumn": 54,
                  "endLine": 78,
                  "endColumn": 56
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Core/Services/ExcelToJsonService.cs",
                "region": {
                  "startLine": 82,
                  "startColumn": 78,
                  "endLine": 82,
                  "endColumn": 80
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Core/Services/ExcelToJsonService.cs",
                "region": {
                  "startLine": 87,
                  "startColumn": 17,
                  "endLine": 87,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Core/Services/ExcelToJsonService.cs",
                "region": {
                  "startLine": 89,
                  "startColumn": 21,
                  "endLine": 89,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Core/Services/ExcelToJsonService.cs",
                "region": {
                  "startLine": 89,
                  "startColumn": 53,
                  "endLine": 89,
                  "endColumn": 55
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+1",
              "2": "+3 (incl 2 for nesting)",
              "3": "+1",
              "4": "+1",
              "5": "+3 (incl 2 for nesting)",
              "6": "+1",
              "7": "+1",
              "8": "+1",
              "9": "+3 (incl 2 for nesting)"
            }
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/ExcelToJsonService.cs",
                "region": {
                  "startLine": 89,
                  "startColumn": 21,
                  "endLine": 89,
                  "endColumn": 23
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Core/Services/ExcelToJsonService.cs",
                "region": {
                  "startLine": 87,
                  "startColumn": 22,
                  "endLine": 87,
                  "endColumn": 24
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1860",
          "level": "note",
          "message": "Prefer comparing 'Count' to 0 rather than using 'Any()', both for clarity and for performance",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/TopicFeedbackService.cs",
                "region": {
                  "startLine": 126,
                  "startColumn": 25,
                  "endLine": 126,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "DiagnosticPropertyKey": "Count"
            }
          }
        },
        {
          "ruleId": "S1125",
          "level": "warning",
          "message": "Remove the unnecessary Boolean literal(s).",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/Services.cs",
                "region": {
                  "startLine": 51,
                  "startColumn": 22,
                  "endLine": 51,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.Exception' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/QuizService.cs",
                "region": {
                  "startLine": 21,
                  "startColumn": 23,
                  "endLine": 21,
                  "endColumn": 75
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.Exception' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/QuizService.cs",
                "region": {
                  "startLine": 28,
                  "startColumn": 23,
                  "endLine": 28,
                  "endColumn": 95
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 36 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/BulkQuestionService.cs",
                "region": {
                  "startLine": 32,
                  "startColumn": 35,
                  "endLine": 32,
                  "endColumn": 54
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Core/Services/BulkQuestionService.cs",
                "region": {
                  "startLine": 34,
                  "startColumn": 13,
                  "endLine": 34,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Core/Services/BulkQuestionService.cs",
                "region": {
                  "startLine": 34,
                  "startColumn": 30,
                  "endLine": 34,
                  "endColumn": 32
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Core/Services/BulkQuestionService.cs",
                "region": {
                  "startLine": 47,
                  "startColumn": 25,
                  "endLine": 47,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Core/Services/BulkQuestionService.cs",
                "region": {
                  "startLine": 53,
                  "startColumn": 25,
                  "endLine": 53,
                  "endColumn": 28
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Core/Services/BulkQuestionService.cs",
                "region": {
                  "startLine": 56,
                  "startColumn": 29,
                  "endLine": 56,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Core/Services/BulkQuestionService.cs",
                "region": {
                  "startLine": 56,
                  "startColumn": 60,
                  "endLine": 56,
                  "endColumn": 62
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Core/Services/BulkQuestionService.cs",
                "region": {
                  "startLine": 60,
                  "startColumn": 29,
                  "endLine": 60,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Core/Services/BulkQuestionService.cs",
                "region": {
                  "startLine": 70,
                  "startColumn": 29,
                  "endLine": 70,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Core/Services/BulkQuestionService.cs",
                "region": {
                  "startLine": 75,
                  "startColumn": 33,
                  "endLine": 75,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Core/Services/BulkQuestionService.cs",
                "region": {
                  "startLine": 78,
                  "startColumn": 29,
                  "endLine": 78,
                  "endColumn": 33
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Core/Services/BulkQuestionService.cs",
                "region": {
                  "startLine": 83,
                  "startColumn": 33,
                  "endLine": 83,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Core/Services/BulkQuestionService.cs",
                "region": {
                  "startLine": 86,
                  "startColumn": 29,
                  "endLine": 86,
                  "endColumn": 33
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Core/Services/BulkQuestionService.cs",
                "region": {
                  "startLine": 89,
                  "startColumn": 33,
                  "endLine": 89,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Core/Services/BulkQuestionService.cs",
                "region": {
                  "startLine": 89,
                  "startColumn": 53,
                  "endLine": 89,
                  "endColumn": 55
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Core/Services/BulkQuestionService.cs",
                "region": {
                  "startLine": 95,
                  "startColumn": 33,
                  "endLine": 95,
                  "endColumn": 35
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Core/Services/BulkQuestionService.cs",
                "region": {
                  "startLine": 103,
                  "startColumn": 25,
                  "endLine": 103,
                  "endColumn": 32
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Core/Services/BulkQuestionService.cs",
                "region": {
                  "startLine": 107,
                  "startColumn": 29,
                  "endLine": 107,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Core/Services/BulkQuestionService.cs",
                "region": {
                  "startLine": 132,
                  "startColumn": 33,
                  "endLine": 132,
                  "endColumn": 36
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Core/Services/BulkQuestionService.cs",
                "region": {
                  "startLine": 134,
                  "startColumn": 37,
                  "endLine": 134,
                  "endColumn": 39
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Core/Services/BulkQuestionService.cs",
                "region": {
                  "startLine": 159,
                  "startColumn": 17,
                  "endLine": 159,
                  "endColumn": 22
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Core/Services/BulkQuestionService.cs",
                "region": {
                  "startLine": 164,
                  "startColumn": 17,
                  "endLine": 164,
                  "endColumn": 22
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+3 (incl 2 for nesting)",
              "11": "+1",
              "12": "+3 (incl 2 for nesting)",
              "13": "+1",
              "14": "+3 (incl 2 for nesting)",
              "15": "+1",
              "16": "+2 (incl 1 for nesting)",
              "17": "+2 (incl 1 for nesting)",
              "18": "+3 (incl 2 for nesting)",
              "19": "+1",
              "2": "+1",
              "20": "+1",
              "3": "+1",
              "4": "+2 (incl 1 for nesting)",
              "5": "+1",
              "6": "+2 (incl 1 for nesting)",
              "7": "+2 (incl 1 for nesting)",
              "8": "+3 (incl 2 for nesting)",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S1199",
          "level": "warning",
          "message": "Extract this nested code block into a separate method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/Services.cs",
                "region": {
                  "startLine": 82,
                  "startColumn": 25,
                  "endLine": 82,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1199",
          "level": "warning",
          "message": "Extract this nested code block into a separate method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/Services.cs",
                "region": {
                  "startLine": 100,
                  "startColumn": 25,
                  "endLine": 100,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1199",
          "level": "warning",
          "message": "Extract this nested code block into a separate method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/Services.cs",
                "region": {
                  "startLine": 118,
                  "startColumn": 17,
                  "endLine": 118,
                  "endColumn": 18
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'quizQuestions' to 'quizData' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/ExcelToJsonService.cs",
                "region": {
                  "startLine": 103,
                  "startColumn": 77,
                  "endLine": 103,
                  "endColumn": 90
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4457",
          "level": "warning",
          "message": "Split this method into two, one handling parameters check and the other handling the asynchronous code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/BulkQuestionService.cs",
                "region": {
                  "startLine": 32,
                  "startColumn": 35,
                  "endLine": 32,
                  "endColumn": 54
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Core/Services/BulkQuestionService.cs",
                "region": {
                  "startLine": 35,
                  "startColumn": 23,
                  "endLine": 35,
                  "endColumn": 62
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1125",
          "level": "warning",
          "message": "Remove the unnecessary Boolean literal(s).",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/Services.cs",
                "region": {
                  "startLine": 142,
                  "startColumn": 32,
                  "endLine": 142,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1850",
          "level": "note",
          "message": "Prefer static 'System.Security.Cryptography.SHA256.HashData' method over 'ComputeHash'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/Services.cs",
                "region": {
                  "startLine": 57,
                  "startColumn": 48,
                  "endLine": 57,
                  "endColumn": 111
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/backend/LXP.Core/Services/Services.cs",
                "region": {
                  "startLine": 55,
                  "startColumn": 31,
                  "endLine": 55,
                  "endColumn": 55
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "ComputeTypePropertyKey": "ComputeHash",
              "DeleteHashCreationPropertyKey": "DeleteHashCreationPropertyKey",
              "HashCreationIndexPropertyKey": "0",
              "TargetHashTypeDiagnosticPropertyKey": "SHA256"
            }
          }
        },
        {
          "ruleId": "CA1862",
          "level": "note",
          "message": "Prefer using 'string.Equals(string, StringComparison)' to perform a case-insensitive comparison, but keep in mind that this might cause subtle changes in behavior, so make sure to conduct thorough testing after applying the suggestion, or if culturally sensitive comparison is not required, consider using 'StringComparison.OrdinalIgnoreCase'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/ExcelToJsonService.cs",
                "region": {
                  "startLine": 82,
                  "startColumn": 26,
                  "endLine": 82,
                  "endColumn": 77
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "LeftOffendingMethod": "ToLower",
              "RightOffendingMethod": null
            }
          }
        },
        {
          "ruleId": "CA1862",
          "level": "note",
          "message": "Prefer using 'string.Equals(string, StringComparison)' to perform a case-insensitive comparison, but keep in mind that this might cause subtle changes in behavior, so make sure to conduct thorough testing after applying the suggestion, or if culturally sensitive comparison is not required, consider using 'StringComparison.OrdinalIgnoreCase'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/ExcelToJsonService.cs",
                "region": {
                  "startLine": 82,
                  "startColumn": 81,
                  "endLine": 82,
                  "endColumn": 133
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "LeftOffendingMethod": "ToLower",
              "RightOffendingMethod": null
            }
          }
        },
        {
          "ruleId": "CA1862",
          "level": "note",
          "message": "Prefer using 'string.Equals(string, StringComparison)' to perform a case-insensitive comparison, but keep in mind that this might cause subtle changes in behavior, so make sure to conduct thorough testing after applying the suggestion, or if culturally sensitive comparison is not required, consider using 'StringComparison.OrdinalIgnoreCase'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/TopicFeedbackService.cs",
                "region": {
                  "startLine": 173,
                  "startColumn": 17,
                  "endLine": 173,
                  "endColumn": 89
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "LeftOffendingMethod": null,
              "RightOffendingMethod": "ToUpper"
            }
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'ValidateOptionsByFeedbackQuestionType' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/TopicFeedbackService.cs",
                "region": {
                  "startLine": 169,
                  "startColumn": 22,
                  "endLine": 169,
                  "endColumn": 59
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.Exception' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/QuizService.cs",
                "region": {
                  "startLine": 116,
                  "startColumn": 23,
                  "endLine": 116,
                  "endColumn": 75
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.Exception' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/QuizService.cs",
                "region": {
                  "startLine": 118,
                  "startColumn": 23,
                  "endLine": 118,
                  "endColumn": 76
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.Exception' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/QuizService.cs",
                "region": {
                  "startLine": 120,
                  "startColumn": 23,
                  "endLine": 120,
                  "endColumn": 76
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.Exception' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/QuizService.cs",
                "region": {
                  "startLine": 122,
                  "startColumn": 23,
                  "endLine": 122,
                  "endColumn": 91
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'ValidateQuiz' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/QuizService.cs",
                "region": {
                  "startLine": 113,
                  "startColumn": 22,
                  "endLine": 113,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'ExtractOptions' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/ExcelToJsonService.cs",
                "region": {
                  "startLine": 140,
                  "startColumn": 26,
                  "endLine": 140,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.Exception' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/QuizEngineService.cs",
                "region": {
                  "startLine": 245,
                  "startColumn": 23,
                  "endLine": 245,
                  "endColumn": 73
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'ValidateTFOptions' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/BulkQuestionService.cs",
                "region": {
                  "startLine": 179,
                  "startColumn": 22,
                  "endLine": 179,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'ValidateMCQOptions' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/BulkQuestionService.cs",
                "region": {
                  "startLine": 189,
                  "startColumn": 22,
                  "endLine": 189,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'GetMSQCorrectOptionCount' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/BulkQuestionService.cs",
                "region": {
                  "startLine": 224,
                  "startColumn": 21,
                  "endLine": 224,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'ValidateMSQOptions' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/BulkQuestionService.cs",
                "region": {
                  "startLine": 198,
                  "startColumn": 22,
                  "endLine": 198,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'ExtractOptions' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/BulkQuestionService.cs",
                "region": {
                  "startLine": 235,
                  "startColumn": 26,
                  "endLine": 235,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'GetMSQOptionCount' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/BulkQuestionService.cs",
                "region": {
                  "startLine": 210,
                  "startColumn": 21,
                  "endLine": 210,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'ValidateQuestionType' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/backend/LXP.Core/Services/BulkQuestionService.cs",
                "region": {
                  "startLine": 173,
                  "startColumn": 22,
                  "endLine": 173,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        }
      ],
      "rules": {
        "CA1510": {
          "id": "CA1510",
          "shortDescription": "Use ArgumentNullException throw helper",
          "fullDescription": "Throw helpers are simpler and more efficient than an if block constructing a new exception instance.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1510",
          "properties": {
            "category": "Maintainability",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA1822": {
          "id": "CA1822",
          "shortDescription": "Mark members as static",
          "fullDescription": "Members that do not access instance data or call instance methods can be marked as static. After you mark the methods as static, the compiler will emit nonvirtual call sites to these members. This can give you a measurable performance gain for performance-sensitive code.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1822",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "PortedFromFxCop",
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA1829": {
          "id": "CA1829",
          "shortDescription": "Use Length/Count property instead of Count() when available",
          "fullDescription": "Enumerable.Count() potentially enumerates the sequence while a Length/Count property is a direct access.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1829",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA1850": {
          "id": "CA1850",
          "shortDescription": "Prefer static 'HashData' method over 'ComputeHash'",
          "fullDescription": "It is more efficient to use the static 'HashData' method over creating and managing a HashAlgorithm instance to call 'ComputeHash'.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1850",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA1860": {
          "id": "CA1860",
          "shortDescription": "Avoid using 'Enumerable.Any()' extension method",
          "fullDescription": "Prefer using 'IsEmpty', 'Count' or 'Length' properties whichever available, rather than calling 'Enumerable.Any()'. The intent is clearer and it is more performant than using 'Enumerable.Any()' extension method.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1860",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA1862": {
          "id": "CA1862",
          "shortDescription": "Use the 'StringComparison' method overloads to perform case-insensitive string comparisons",
          "fullDescription": "Avoid calling 'ToLower', 'ToUpper', 'ToLowerInvariant' and 'ToUpperInvariant' to perform case-insensitive string comparisons, as in 'string.ToLower() == string.ToLower()', because they lead to an allocation. Instead, use 'string.Equals(string, StringComparison)' to perform case-insensitive comparisons. Switching to using an overload that takes a 'StringComparison' might cause subtle changes in behavior, so it's important to conduct thorough testing after applying the suggestion. Additionally, if a culturally sensitive comparison is not required, consider using 'StringComparison.OrdinalIgnoreCase'.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1862",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA2208": {
          "id": "CA2208",
          "shortDescription": "Instantiate argument exceptions correctly",
          "fullDescription": "A call is made to the default (parameterless) constructor of an exception type that is or derives from ArgumentException, or an incorrect string argument is passed to a parameterized constructor of an exception type that is or derives from ArgumentException.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2208",
          "properties": {
            "category": "Usage",
            "isEnabledByDefault": true,
            "tags": [
              "PortedFromFxCop",
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CS0472": {
          "id": "CS0472",
          "shortDescription": "The result of the expression is always the same since a value of this type is never equal to 'null'",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS0472)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS1998": {
          "id": "CS1998",
          "shortDescription": "Async method lacks 'await' operators and will run synchronously",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS1998)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS4014": {
          "id": "CS4014",
          "shortDescription": "Because this call is not awaited, execution of the current method continues before the call is completed",
          "fullDescription": "The current method calls an async method that returns a Task or a Task<TResult> and doesn't apply the await operator to the result. The call to the async method starts an asynchronous task. However, because no await operator is applied, the program continues without waiting for the task to complete. In most cases, that behavior isn't what you expect. Usually other aspects of the calling method depend on the results of the call or, minimally, the called method is expected to complete before you return from the method that contains the call.\u000d\u000a\u000d\u000aAn equally important issue is what happens to exceptions that are raised in the called async method. An exception that's raised in a method that returns a Task or Task<TResult> is stored in the returned task. If you don't await the task or explicitly check for exceptions, the exception is lost. If you await the task, its exception is rethrown.\u000d\u000a\u000d\u000aAs a best practice, you should always await the call.\u000d\u000a\u000d\u000aYou should consider suppressing the warning only if you're sure that you don't want to wait for the asynchronous call to complete and that the called method won't raise any exceptions. In that case, you can suppress the warning by assigning the task result of the call to a variable.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS4014)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8600": {
          "id": "CS8600",
          "shortDescription": "Converting null literal or possible null value to non-nullable type.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8600)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8601": {
          "id": "CS8601",
          "shortDescription": "Possible null reference assignment.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8601)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8602": {
          "id": "CS8602",
          "shortDescription": "Dereference of a possibly null reference.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8602)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8603": {
          "id": "CS8603",
          "shortDescription": "Possible null reference return.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8603)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8604": {
          "id": "CS8604",
          "shortDescription": "Possible null reference argument.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8604)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "S1066": {
          "id": "S1066",
          "shortDescription": "Collapsible \"if\" statements should be merged",
          "fullDescription": "Merging collapsible if statements increases the code’s readability.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1066",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S112": {
          "id": "S112",
          "shortDescription": "General exceptions should never be thrown",
          "fullDescription": "Throwing such general exceptions as Exception, SystemException, ApplicationException, IndexOutOfRangeException, NullReferenceException, OutOfMemoryException and ExecutionEngineException prevents calling methods from handling true, system-generated exceptions differently than application-generated errors.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-112",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1125": {
          "id": "S1125",
          "shortDescription": "Boolean literals should not be redundant",
          "fullDescription": "Redundant Boolean literals should be removed from expressions to improve readability.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1125",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1135": {
          "id": "S1135",
          "shortDescription": "Track uses of \"TODO\" tags",
          "fullDescription": "TODO tags are commonly used to mark places where some more code is required, but which the developer wants to implement later.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1135",
          "properties": {
            "category": "Info Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1144": {
          "id": "S1144",
          "shortDescription": "Unused private types or members should be removed",
          "fullDescription": "private or internal types or private members that are never executed or referenced are dead code: unnecessary, inoperative code that should be removed. Cleaning out dead code decreases the size of the maintained codebase, making it easier to understand the program and preventing bugs from being introduced.",
          "defaultLevel": "note",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1144",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay",
              "Unnecessary"
            ]
          }
        },
        "S1199": {
          "id": "S1199",
          "shortDescription": "Nested code blocks should not be used",
          "fullDescription": "Nested code blocks can be used to create a new scope and restrict the visibility of the variables defined inside it. Using this feature in a method typically indicates that the method has too many responsibilities, and should be refactored into smaller methods.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1199",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S125": {
          "id": "S125",
          "shortDescription": "Sections of code should not be commented out",
          "fullDescription": "Programmers should not comment out code as it bloats programs and reduces readability.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-125",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1481": {
          "id": "S1481",
          "shortDescription": "Unused local variables should be removed",
          "fullDescription": "If a local variable is declared but not used, it is dead code and should be removed. Doing so will improve maintainability because developers will not wonder what the variable is used for.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1481",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2583": {
          "id": "S2583",
          "shortDescription": "Conditionally executed code should be reachable",
          "fullDescription": "Conditional expressions which are always true or false can lead to dead code. Such code is always buggy and should never be used in production.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2583",
          "properties": {
            "category": "Major Bug",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2933": {
          "id": "S2933",
          "shortDescription": "Fields that are only assigned in the constructor should be \"readonly\"",
          "fullDescription": "readonly fields can only be assigned in a class constructor. If a class has a field that’s not marked readonly but is only set in the constructor, it could cause confusion about the field’s intended use. To avoid confusion, such fields should be marked readonly to make their intended use explicit, and to prevent future maintainers from inadvertently changing their use.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2933",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2971": {
          "id": "S2971",
          "shortDescription": "\"IEnumerable\" LINQs should be simplified",
          "fullDescription": "In the interests of readability, code that can be simplified should be simplified. To that end, there are several ways IEnumerable language integrated queries (LINQ) can be simplified",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2971",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3776": {
          "id": "S3776",
          "shortDescription": "Cognitive Complexity of methods should not be too high",
          "fullDescription": "Cognitive Complexity is a measure of how hard the control flow of a method is to understand. Methods with high Cognitive Complexity will be difficult to maintain.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3776",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3928": {
          "id": "S3928",
          "shortDescription": "Parameter names used into ArgumentException constructors should match an existing one ",
          "fullDescription": "Some constructors of the ArgumentException, ArgumentNullException, ArgumentOutOfRangeException and DuplicateWaitObjectException classes must be fed with a valid parameter name. This rule raises an issue in two cases:",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3928",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S4457": {
          "id": "S4457",
          "shortDescription": "Parameter validation in \"async\"/\"await\" methods should be wrapped",
          "fullDescription": "Because of the way async/await methods are rewritten by the compiler, any exceptions thrown during the parameters check will happen only when the task is observed. That could happen far away from the source of the buggy code or never happen for fire-and-forget tasks.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-4457",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S4487": {
          "id": "S4487",
          "shortDescription": "Unread \"private\" fields should be removed",
          "fullDescription": "Private fields only used to store values without reading them later is a case of dead store. So changing the value of such field is useless and most probably indicates a serious error in the code.",
          "defaultLevel": "note",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-4487",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay",
              "Unnecessary"
            ]
          }
        },
        "S927": {
          "id": "S927",
          "shortDescription": "Parameter names should match base declaration and other partial definitions",
          "fullDescription": "The name of a parameter in an externally visible. This rule raises an issue when method override does not match the name of the parameter in the base declaration of the method, or the name of the parameter in the interface declaration of the method or the name of any other partial definition.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-927",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        }
      }
    }
  ]
}